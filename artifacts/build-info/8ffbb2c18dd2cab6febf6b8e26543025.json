{
	"id": "8ffbb2c18dd2cab6febf6b8e26543025",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\nimport \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\";\n\n\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    //Token Name, Symbol and Total Supply before Deployment\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply) {\n        _name = name_;\n        _symbol = symbol_;\n        _mint(msg.sender, initialSupply);\n    }\n\n    //Token Name\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    //Token Name\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    //Token Decimals\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    //Token Total Supply\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    //Balance of a particular account\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    //Transfer Function\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = msg.sender;\n        require(to != msg.sender, \"You cannot transfer token to your self\");\n        require(amount <= _balances[owner], \"You do not have sufficient tokens\");\n        _balances[owner] -= amount;\n        _balances[to] += amount;\n        _transfer(owner, to, amount);\n        _totalSupply -= amount;\n        return true;\n    }\n\n    //Give allowance to particular user to transfer token on your behalf\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    //Approve tokens to a particular account\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = msg.sender;\n        require(_balances[owner] >= amount, \"You do not have sufficient tokens\");\n        require(spender != msg.sender, \"You cannot approve yourself\");\n        \n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    //Transfer from a given account\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = msg.sender;\n        _balances[from] -= amount;\n        _balances[to] += amount;\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    //Increase the allowance given to a particular account\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        require(_balances[owner] >= addedValue);\n        _balances[owner] -= addedValue;\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    //Decrease the allowance given to a particular account\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        _balances[owner] += subtractedValue;\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    //Transfer function for Token owner only\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    //Mint Token Function for the deployer of the contract\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    //Burn Token Function for the deployer of the contract\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    //Approve function for the deployer of the contract\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    //Spend allowance given for the deployer of the contract\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    //Balance before transfer\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    //Balance after transfer\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.8;\n\n/**\n * @title Sapphire\n * @dev Convenient wrapper methods for Sapphire's cryptographic primitives.\n */\nlibrary Sapphire {\n    address private constant RANDOM_BYTES =\n        0x0100000000000000000000000000000000000001;\n    address private constant DERIVE_KEY =\n        0x0100000000000000000000000000000000000002;\n    address private constant ENCRYPT =\n        0x0100000000000000000000000000000000000003;\n    address private constant DECRYPT =\n        0x0100000000000000000000000000000000000004;\n    address private constant GENERAGE_SIGNING_KEYPAIR =\n        0x0100000000000000000000000000000000000005;\n    address private constant SIGN_DIGEST =\n        0x0100000000000000000000000000000000000006;\n    address private constant VERIFY_DIGEST =\n        0x0100000000000000000000000000000000000007;\n    address private constant CURVE25519_PUBLIC_KEY =\n        0x0100000000000000000000000000000000000008;\n\n    type Curve25519PublicKey is bytes32;\n    type Curve25519SecretKey is bytes32;\n\n    enum SigningAlg {\n        // Ed25519 signature over the provided message using SHA-512/265 with a domain separator.\n        // Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Ed25519Oasis,\n        // Ed25519 signature over the provided message.\n        Ed25519Pure,\n        // Ed25519 signature over the provided prehashed SHA-512 digest.\n        Ed25519PrehashedSha512,\n        // Secp256k1 signature over the provided message using SHA-512/256 with a domain separator.\n        // Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Secp256k1Oasis,\n        // Secp256k1 over the provided Keccak256 digest.\n        // Can be used to sign transactions for Ethereum-compatible networks.\n        Secp256k1PrehashedKeccak256,\n        // Secp256k1 signature over the provided SHA-256 digest.\n        Secp256k1PrehashedSha256,\n        // Sr25519 signature over the provided message.\n        Sr25519\n    }\n\n    /**\n     * @dev Returns cryptographically secure random bytes.\n     * @param numBytes The number of bytes to return.\n     * @param pers An optional personalization string to increase domain separation.\n     * @return The random bytes. If the number of bytes requested is too large (over 1024), a smaller amount (1024) will be returned.\n     */\n    function randomBytes(uint256 numBytes, bytes memory pers)\n        internal\n        view\n        returns (bytes memory)\n    {\n        (bool success, bytes memory entropy) = RANDOM_BYTES.staticcall(\n            abi.encode(numBytes, pers)\n        );\n        require(success, \"randomBytes: failed\");\n        return entropy;\n    }\n\n    /**\n     * @dev Generates a Curve25519 keypair.\n     * @param pers An optional personalization string used to add domain separation.\n     * @return pk The Curve25519 public key. Useful for key exchange.\n     * @return sk The Curve25519 secret key. Pairs well with {`deriveSymmetricKey`}.\n     */\n    function generateCurve25519KeyPair(bytes memory pers)\n        internal\n        view\n        returns (Curve25519PublicKey pk, Curve25519SecretKey sk)\n    {\n        bytes memory scalar = randomBytes(32, pers);\n        // Twiddle some bits, as per RFC 7748 §5.\n        scalar[0] &= 0xf8; // Make it a multiple of 8 to avoid small subgroup attacks.\n        scalar[31] &= 0x7f; // Clamp to < 2^255 - 19\n        scalar[31] |= 0x40; // Clamp to >= 2^254\n        (bool success, bytes memory pkBytes) = CURVE25519_PUBLIC_KEY.staticcall(\n            scalar\n        );\n        require(success, \"gen curve25519 pk: failed\");\n        return (\n            Curve25519PublicKey.wrap(bytes32(pkBytes)),\n            Curve25519SecretKey.wrap(bytes32(scalar))\n        );\n    }\n\n    /**\n     * @dev Derive a symmetric key from a pair of keys using x25519.\n     * @param peerPublicKey The peer's public key.\n     * @param secretKey Your secret key.\n     * @return A derived symmetric key.\n     */\n    function deriveSymmetricKey(\n        Curve25519PublicKey peerPublicKey,\n        Curve25519SecretKey secretKey\n    ) internal view returns (bytes32) {\n        (bool success, bytes memory symmetric) = DERIVE_KEY.staticcall(\n            abi.encode(peerPublicKey, secretKey)\n        );\n        require(success, \"deriveSymmetricKey: failed\");\n        return bytes32(symmetric);\n    }\n\n    /**\n     * @dev Encrypt and authenticate the plaintext and additional data using DeoxysII.\n     * @param key The key to use for encryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this parameter are used.\n     * @param plaintext The plaintext to encrypt and authenticate.\n     * @param additionalData The additional data to authenticate.\n     * @return The ciphertext with appended auth tag.\n     */\n    function encrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory plaintext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory ciphertext) = ENCRYPT.staticcall(\n            abi.encode(key, nonce, plaintext, additionalData)\n        );\n        require(success, \"encrypt: failed\");\n        return ciphertext;\n    }\n\n    /**\n     * @dev Decrypt and authenticate the ciphertext and additional data using DeoxysII. Reverts if the auth tag is incorrect.\n     * @param key The key to use for decryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this parameter are used.\n     * @param ciphertext The ciphertext with tag to decrypt and authenticate.\n     * @param additionalData The additional data to authenticate against the ciphertext.\n     * @return The original plaintext.\n     */\n    function decrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory ciphertext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory plaintext) = DECRYPT.staticcall(\n            abi.encode(key, nonce, ciphertext, additionalData)\n        );\n        require(success, \"decrypt: failed\");\n        return plaintext;\n    }\n\n    /**\n     * @dev Generate a public/private key pair using the specified method and seed.\n     * @param alg The signing alg for which to generate a keypair.\n     * @param seed The seed to use for generating the key pair. You can use the `randomBytes` method if you don't already have a seed.\n     * @return publicKey The public half of the keypair.\n     * @return secretKey The secret half of the keypair.\n     */\n    function generateSigningKeyPair(SigningAlg alg, bytes memory seed)\n        internal\n        view\n        returns (bytes memory publicKey, bytes memory secretKey)\n    {\n        (bool success, bytes memory keypair) = GENERAGE_SIGNING_KEYPAIR\n            .staticcall(abi.encode(alg, seed));\n        require(success, \"gen signing keypair: failed\");\n        return abi.decode(keypair, (bytes, bytes));\n    }\n\n    /**\n     * @dev Sign a message within the provided context using the specified algorithm, and return the signature.\n     * @param alg The signing algorithm to use.\n     * @param secretKey The secret key to use for signing. The key must be valid for use with the requested algorithm.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n     * @param message Message to sign, should be zero-length if precomputed hash given\n     * @return signature The resulting signature.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign\n     */\n    function sign(\n        SigningAlg alg,\n        bytes memory secretKey,\n        bytes memory contextOrHash,\n        bytes memory message\n    ) internal view returns (bytes memory signature) {\n        (bool success, bytes memory sig) = SIGN_DIGEST.staticcall(\n            abi.encode(alg, secretKey, contextOrHash, message)\n        );\n        require(success, \"sign: failed\");\n        return sig;\n    }\n\n    /**\n     * @dev Verifies that the provided digest was signed with using the secret key corresponding to the provided private key and the specified signing algorithm.\n     * @param alg The signing algorithm by which the signature was generated.\n     * @param publicKey The public key against which to check the signature.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n     * @param message The hash of the message that was signed, should be zero-length if precomputed hash was given\n     * @param signature The signature to check.\n     * @return verified Whether the signature is valid for the given parameters.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify\n     */\n    function verify(\n        SigningAlg alg,\n        bytes memory publicKey,\n        bytes memory contextOrHash,\n        bytes memory message,\n        bytes memory signature\n    ) internal view returns (bool verified) {\n        (bool success, bytes memory v) = VERIFY_DIGEST.staticcall(\n            abi.encode(alg, publicKey, contextOrHash, message, signature)\n        );\n        require(success, \"verify: failed\");\n        return abi.decode(v, (bool));\n    }\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\ninterface IERC20Metadata is IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol": {
				"Sapphire": {
					"abi": [],
					"devdoc": {
						"details": "Convenient wrapper methods for Sapphire's cryptographic primitives.",
						"kind": "dev",
						"methods": {},
						"title": "Sapphire",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":167:9133  library Sapphire {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":167:9133  library Sapphire {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202710010ecf6935b6b2f440776166449bab05373f49d3f55d9fdc50edc085386c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202710010ecf6935b6b2f440776166449bab05373f49d3f55d9fdc50edc085386c64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 LT ADD 0xE 0xCF PUSH10 0x35B6B2F440776166449B 0xAB SDIV CALLDATACOPY EXTCODEHASH 0x49 0xD3 CREATE2 0x5D SWAP16 0xDC POP 0xED 0xC0 DUP6 CODESIZE PUSH13 0x64736F6C634300081200330000 ",
							"sourceMap": "167:8966:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202710010ecf6935b6b2f440776166449bab05373f49d3f55d9fdc50edc085386c64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 LT ADD 0xE 0xCF PUSH10 0x35B6B2F440776166449B 0xAB SDIV CALLDATACOPY EXTCODEHASH 0x49 0xD3 CREATE2 0x5D SWAP16 0xDC POP 0xED 0xC0 DUP6 CODESIZE PUSH13 0x64736F6C634300081200330000 ",
							"sourceMap": "167:8966:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decrypt(bytes32,bytes32,bytes memory,bytes memory)": "infinite",
								"deriveSymmetricKey(Sapphire.Curve25519PublicKey,Sapphire.Curve25519SecretKey)": "infinite",
								"encrypt(bytes32,bytes32,bytes memory,bytes memory)": "infinite",
								"generateCurve25519KeyPair(bytes memory)": "infinite",
								"generateSigningKeyPair(enum Sapphire.SigningAlg,bytes memory)": "infinite",
								"randomBytes(uint256,bytes memory)": "infinite",
								"sign(enum Sapphire.SigningAlg,bytes memory,bytes memory,bytes memory)": "infinite",
								"verify(enum Sapphire.SigningAlg,bytes memory,bytes memory,bytes memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 9133,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202710010ecf6935b6b2f440776166449bab05373f49d3f55d9fdc50edc085386c64736f6c63430008120033",
									".code": [
										{
											"begin": 167,
											"end": 9133,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 9133,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol",
								"Context.sol",
								"ERC20.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Convenient wrapper methods for Sapphire's cryptographic primitives.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Sapphire\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":\"Sapphire\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x290e04168338b3fba8216c6267fd3adb15f812152a875911e0ca87d04af25893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://16f41536453ffbdf405ec48338f31d59a8875e00552c8d8e1789334ef6dd8216\",\"dweb:/ipfs/QmNhQwDqWzojAmhwZoE4sEUkGBoRGCo3NXRnJYG6gnL4YF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x0e7fc46a788f111227368fb1b9e99f70d576f06ce6a320788e3e66a6f64df385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8600772385b8d0c1d5afb56696077170d5d8cc171caa4cf4cda656ef8595edf3\",\"dweb:/ipfs/QmVcDmYAt3RA5F1aEpmoq1pUQJAcqMJ6NTX2G8a2KSGYUt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":205:6889  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":537:740  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":659:664  name_ */\n  dup3\n    /* \"ERC20.sol\":651:656  _name */\n  0x03\n    /* \"ERC20.sol\":651:664  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":684:691  symbol_ */\n  dup2\n    /* \"ERC20.sol\":674:681  _symbol */\n  0x04\n    /* \"ERC20.sol\":674:691  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":701:733  _mint(msg.sender, initialSupply) */\n  tag_9\n    /* \"ERC20.sol\":707:717  msg.sender */\n  caller\n    /* \"ERC20.sol\":719:732  initialSupply */\n  dup3\n    /* \"ERC20.sol\":701:706  _mint */\n  shl(0x20, tag_10)\n    /* \"ERC20.sol\":701:733  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"ERC20.sol\":537:740  constructor(... */\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":205:6889  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_11)\n    /* \"ERC20.sol\":4605:4994  function _mint(address account, uint256 amount) internal virtual {... */\ntag_10:\n    /* \"ERC20.sol\":4707:4708  0 */\n  0x00\n    /* \"ERC20.sol\":4688:4709  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":4688:4695  account */\n  dup3\n    /* \"ERC20.sol\":4688:4709  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":4680:4745  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"ERC20.sol\":4756:4805  _beforeTokenTransfer(address(0), account, amount) */\n  tag_16\n    /* \"ERC20.sol\":4785:4786  0 */\n  0x00\n    /* \"ERC20.sol\":4789:4796  account */\n  dup4\n    /* \"ERC20.sol\":4798:4804  amount */\n  dup4\n    /* \"ERC20.sol\":4756:4776  _beforeTokenTransfer */\n  shl(0x20, tag_17)\n    /* \"ERC20.sol\":4756:4805  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"ERC20.sol\":4832:4838  amount */\n  dup1\n    /* \"ERC20.sol\":4816:4828  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":4816:4838  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":4870:4876  amount */\n  dup1\n    /* \"ERC20.sol\":4848:4857  _balances */\n  0x00\n    /* \"ERC20.sol\":4848:4866  _balances[account] */\n  dup1\n    /* \"ERC20.sol\":4858:4865  account */\n  dup5\n    /* \"ERC20.sol\":4848:4866  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ERC20.sol\":4848:4876  _balances[account] += amount */\n  dup3\n  dup3\n  sload\n  tag_20\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_20:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":4912:4919  account */\n  dup2\n    /* \"ERC20.sol\":4891:4928  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":4908:4909  0 */\n  0x00\n    /* \"ERC20.sol\":4891:4928  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ERC20.sol\":4921:4927  amount */\n  dup4\n    /* \"ERC20.sol\":4891:4928  Transfer(address(0), account, amount) */\n  mload(0x40)\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":4939:4987  _afterTokenTransfer(address(0), account, amount) */\n  tag_23\n    /* \"ERC20.sol\":4967:4968  0 */\n  0x00\n    /* \"ERC20.sol\":4971:4978  account */\n  dup4\n    /* \"ERC20.sol\":4980:4986  amount */\n  dup4\n    /* \"ERC20.sol\":4939:4958  _afterTokenTransfer */\n  shl(0x20, tag_24)\n    /* \"ERC20.sol\":4939:4987  _afterTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"ERC20.sol\":4605:4994  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":6611:6732  function _beforeTokenTransfer(... */\ntag_17:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":6767:6887  function _afterTokenTransfer(... */\ntag_24:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_27:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_29:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_30:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_31:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_32:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_33:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_34:\n    /* \"#utility.yul\":957:984   */\n  tag_75\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_77\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1030:1118   */\ntag_76:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_35:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_79\n  tag_27\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_80\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_34\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_36:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_83\n  tag_33\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1434:1490   */\ntag_82:\n    /* \"#utility.yul\":1508:1537   */\n  tag_84\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_37:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_86:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_38:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_90\n    /* \"#utility.yul\":1992:2041   */\n  tag_91\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_36\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1976:2042   */\n  tag_35\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_93\n  tag_31\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2117:2229   */\ntag_92:\n    /* \"#utility.yul\":2238:2290   */\n  tag_94\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_37\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_39:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_97\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2399:2521   */\ntag_96:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_98\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_38\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_40:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_41:\n    /* \"#utility.yul\":2833:2857   */\n  tag_101\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_40\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_102:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_42:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_104\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_41\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_107\n  tag_28\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3178:3297   */\ntag_106:\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3346:3355   */\n  dup5\n    /* \"#utility.yul\":3342:3359   */\n  add\n    /* \"#utility.yul\":3336:3360   */\n  mload\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3490   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3409:3488   */\n  tag_109\n  tag_29\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3373:3490   */\ntag_108:\n    /* \"#utility.yul\":3514:3588   */\n  tag_110\n    /* \"#utility.yul\":3580:3587   */\n  dup7\n    /* \"#utility.yul\":3571:3577   */\n  dup3\n    /* \"#utility.yul\":3560:3569   */\n  dup8\n    /* \"#utility.yul\":3556:3578   */\n  add\n    /* \"#utility.yul\":3514:3588   */\n  tag_39\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3504:3588   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3598   */\n  pop\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3647:3656   */\n  dup5\n    /* \"#utility.yul\":3643:3661   */\n  add\n    /* \"#utility.yul\":3637:3662   */\n  mload\n    /* \"#utility.yul\":3689:3707   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3681:3687   */\n  dup2\n    /* \"#utility.yul\":3678:3708   */\n  gt\n    /* \"#utility.yul\":3675:3792   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3711:3790   */\n  tag_112\n  tag_29\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3675:3792   */\ntag_111:\n    /* \"#utility.yul\":3816:3890   */\n  tag_113\n    /* \"#utility.yul\":3882:3889   */\n  dup7\n    /* \"#utility.yul\":3873:3879   */\n  dup3\n    /* \"#utility.yul\":3862:3871   */\n  dup8\n    /* \"#utility.yul\":3858:3880   */\n  add\n    /* \"#utility.yul\":3816:3890   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3806:3890   */\n  swap3\n  pop\n    /* \"#utility.yul\":3608:3900   */\n  pop\n    /* \"#utility.yul\":3939:3941   */\n  0x40\n    /* \"#utility.yul\":3965:4029   */\n  tag_114\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3965:4029   */\n  tag_42\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3955:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_43:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_44:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_45:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_118:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_120\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4573:4657   */\ntag_119:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_46:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_47:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_48:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_49:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_125\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_48\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5288:5327   */\n  tag_126\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_48\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_50:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_51:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_129\n    /* \"#utility.yul\":5594:5628   */\n  tag_130\n    /* \"#utility.yul\":5603:5627   */\n  tag_131\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_40\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5594:5628   */\n  tag_50\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5576:5629   */\n  tag_40\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_52:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_53:\n    /* \"#utility.yul\":5832:5871   */\n  tag_134\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_51\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5893:5984   */\n  tag_135\n    /* \"#utility.yul\":5942:5983   */\n  tag_136\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_52\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_49\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_54:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_55:\n    /* \"#utility.yul\":6153:6185   */\n  tag_139\n  tag_54\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6194:6259   */\n  tag_140\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_53\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_56:\n    /* \"#utility.yul\":6331:6451   */\ntag_142:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_145\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_55\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_57:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_148\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_46\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6682:6711   */\n  tag_149\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_47\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_150:\n    /* \"#utility.yul\":6909:6989   */\n  tag_151\n    /* \"#utility.yul\":6965:6987   */\n  tag_152\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_47\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_56\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_147:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_58:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_59:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_155\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_58\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_60:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_157\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_59\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_7:\n    /* \"#utility.yul\":7726:7763   */\n  tag_159\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_43\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_161\n  tag_33\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7814:7870   */\ntag_160:\n    /* \"#utility.yul\":7894:7932   */\n  tag_162\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_45\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7979:8046   */\n  tag_163\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_57\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_165\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_166:\n    /* \"#utility.yul\":8920:8987   */\n  tag_167\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_60\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_164)\n    /* \"#utility.yul\":8141:8759   */\ntag_165:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_168\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_46\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_169:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_169)\ntag_171:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_173\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_59\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_172:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_164:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9179   */\ntag_61:\n    /* \"#utility.yul\":9094:9105   */\n  0x00\n    /* \"#utility.yul\":9128:9134   */\n  dup3\n    /* \"#utility.yul\":9123:9126   */\n  dup3\n    /* \"#utility.yul\":9116:9135   */\n  mstore\n    /* \"#utility.yul\":9168:9172   */\n  0x20\n    /* \"#utility.yul\":9163:9166   */\n  dup3\n    /* \"#utility.yul\":9159:9173   */\n  add\n    /* \"#utility.yul\":9144:9173   */\n  swap1\n  pop\n    /* \"#utility.yul\":9010:9179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9185:9366   */\ntag_62:\n    /* \"#utility.yul\":9325:9358   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":9321:9322   */\n  0x00\n    /* \"#utility.yul\":9313:9319   */\n  dup3\n    /* \"#utility.yul\":9309:9323   */\n  add\n    /* \"#utility.yul\":9302:9359   */\n  mstore\n    /* \"#utility.yul\":9185:9366   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9372:9738   */\ntag_63:\n    /* \"#utility.yul\":9514:9517   */\n  0x00\n    /* \"#utility.yul\":9535:9602   */\n  tag_177\n    /* \"#utility.yul\":9599:9601   */\n  0x1f\n    /* \"#utility.yul\":9594:9597   */\n  dup4\n    /* \"#utility.yul\":9535:9602   */\n  tag_61\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9528:9602   */\n  swap2\n  pop\n    /* \"#utility.yul\":9611:9704   */\n  tag_178\n    /* \"#utility.yul\":9700:9703   */\n  dup3\n    /* \"#utility.yul\":9611:9704   */\n  tag_62\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9729:9731   */\n  0x20\n    /* \"#utility.yul\":9724:9727   */\n  dup3\n    /* \"#utility.yul\":9720:9732   */\n  add\n    /* \"#utility.yul\":9713:9732   */\n  swap1\n  pop\n    /* \"#utility.yul\":9372:9738   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9744:10163   */\ntag_15:\n    /* \"#utility.yul\":9910:9914   */\n  0x00\n    /* \"#utility.yul\":9948:9950   */\n  0x20\n    /* \"#utility.yul\":9937:9946   */\n  dup3\n    /* \"#utility.yul\":9933:9951   */\n  add\n    /* \"#utility.yul\":9925:9951   */\n  swap1\n  pop\n    /* \"#utility.yul\":9997:10006   */\n  dup2\n    /* \"#utility.yul\":9991:9995   */\n  dup2\n    /* \"#utility.yul\":9987:10007   */\n  sub\n    /* \"#utility.yul\":9983:9984   */\n  0x00\n    /* \"#utility.yul\":9972:9981   */\n  dup4\n    /* \"#utility.yul\":9968:9985   */\n  add\n    /* \"#utility.yul\":9961:10008   */\n  mstore\n    /* \"#utility.yul\":10025:10156   */\n  tag_180\n    /* \"#utility.yul\":10151:10155   */\n  dup2\n    /* \"#utility.yul\":10025:10156   */\n  tag_63\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":10017:10156   */\n  swap1\n  pop\n    /* \"#utility.yul\":9744:10163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10169:10349   */\ntag_64:\n    /* \"#utility.yul\":10217:10294   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10214:10215   */\n  0x00\n    /* \"#utility.yul\":10207:10295   */\n  mstore\n    /* \"#utility.yul\":10314:10318   */\n  0x11\n    /* \"#utility.yul\":10311:10312   */\n  0x04\n    /* \"#utility.yul\":10304:10319   */\n  mstore\n    /* \"#utility.yul\":10338:10342   */\n  0x24\n    /* \"#utility.yul\":10335:10336   */\n  0x00\n    /* \"#utility.yul\":10328:10343   */\n  revert\n    /* \"#utility.yul\":10355:10546   */\ntag_19:\n    /* \"#utility.yul\":10395:10398   */\n  0x00\n    /* \"#utility.yul\":10414:10434   */\n  tag_183\n    /* \"#utility.yul\":10432:10433   */\n  dup3\n    /* \"#utility.yul\":10414:10434   */\n  tag_40\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":10409:10434   */\n  swap2\n  pop\n    /* \"#utility.yul\":10448:10468   */\n  tag_184\n    /* \"#utility.yul\":10466:10467   */\n  dup4\n    /* \"#utility.yul\":10448:10468   */\n  tag_40\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":10443:10468   */\n  swap3\n  pop\n    /* \"#utility.yul\":10491:10492   */\n  dup3\n    /* \"#utility.yul\":10488:10489   */\n  dup3\n    /* \"#utility.yul\":10484:10493   */\n  add\n    /* \"#utility.yul\":10477:10493   */\n  swap1\n  pop\n    /* \"#utility.yul\":10512:10515   */\n  dup1\n    /* \"#utility.yul\":10509:10510   */\n  dup3\n    /* \"#utility.yul\":10506:10516   */\n  gt\n    /* \"#utility.yul\":10503:10539   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":10519:10537   */\n  tag_186\n  tag_64\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":10503:10539   */\ntag_185:\n    /* \"#utility.yul\":10355:10546   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10552:10670   */\ntag_65:\n    /* \"#utility.yul\":10639:10663   */\n  tag_188\n    /* \"#utility.yul\":10657:10662   */\n  dup2\n    /* \"#utility.yul\":10639:10663   */\n  tag_40\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":10634:10637   */\n  dup3\n    /* \"#utility.yul\":10627:10664   */\n  mstore\n    /* \"#utility.yul\":10552:10670   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10676:10898   */\ntag_22:\n    /* \"#utility.yul\":10769:10773   */\n  0x00\n    /* \"#utility.yul\":10807:10809   */\n  0x20\n    /* \"#utility.yul\":10796:10805   */\n  dup3\n    /* \"#utility.yul\":10792:10810   */\n  add\n    /* \"#utility.yul\":10784:10810   */\n  swap1\n  pop\n    /* \"#utility.yul\":10820:10891   */\n  tag_190\n    /* \"#utility.yul\":10888:10889   */\n  0x00\n    /* \"#utility.yul\":10877:10886   */\n  dup4\n    /* \"#utility.yul\":10873:10890   */\n  add\n    /* \"#utility.yul\":10864:10870   */\n  dup5\n    /* \"#utility.yul\":10820:10891   */\n  tag_65\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":10676:10898   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":205:6889  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":205:6889  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":763:861  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2166:2523  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1135:1241  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2565:2917  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1013:1104  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2982:3303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1285:1410  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":884:986  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3368:3838  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1440:1887  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1966:2115  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":763:861  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":817:830  string memory */\n      0x60\n        /* \"ERC20.sol\":849:854  _name */\n      0x03\n        /* \"ERC20.sol\":842:854  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":763:861  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2166:2523  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20.sol\":2249:2253  bool */\n      0x00\n        /* \"ERC20.sol\":2265:2278  address owner */\n      dup1\n        /* \"ERC20.sol\":2281:2291  msg.sender */\n      caller\n        /* \"ERC20.sol\":2265:2291  address owner = msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":2329:2335  amount */\n      dup3\n        /* \"ERC20.sol\":2309:2318  _balances */\n      0x00\n        /* \"ERC20.sol\":2309:2325  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":2319:2324  owner */\n      dup4\n        /* \"ERC20.sol\":2309:2325  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":2309:2335  _balances[owner] >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":2301:2373  require(_balances[owner] >= amount, \"You do not have sufficient tokens\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"ERC20.sol\":2402:2412  msg.sender */\n      caller\n        /* \"ERC20.sol\":2391:2412  spender != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2391:2398  spender */\n      dup5\n        /* \"ERC20.sol\":2391:2412  spender != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":2383:2444  require(spender != msg.sender, \"You cannot approve yourself\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"ERC20.sol\":2463:2495  _approve(owner, spender, amount) */\n      tag_77\n        /* \"ERC20.sol\":2472:2477  owner */\n      dup2\n        /* \"ERC20.sol\":2479:2486  spender */\n      dup6\n        /* \"ERC20.sol\":2488:2494  amount */\n      dup6\n        /* \"ERC20.sol\":2463:2471  _approve */\n      tag_78\n        /* \"ERC20.sol\":2463:2495  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20.sol\":2512:2516  true */\n      0x01\n        /* \"ERC20.sol\":2505:2516  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":2166:2523  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1135:1241  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"ERC20.sol\":1196:1203  uint256 */\n      0x00\n        /* \"ERC20.sol\":1222:1234  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":1215:1234  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":1135:1241  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2565:2917  function transferFrom(... */\n    tag_32:\n        /* \"ERC20.sol\":2692:2696  bool */\n      0x00\n        /* \"ERC20.sol\":2708:2723  address spender */\n      dup1\n        /* \"ERC20.sol\":2726:2736  msg.sender */\n      caller\n        /* \"ERC20.sol\":2708:2736  address spender = msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":2765:2771  amount */\n      dup3\n        /* \"ERC20.sol\":2746:2755  _balances */\n      0x00\n        /* \"ERC20.sol\":2746:2761  _balances[from] */\n      dup1\n        /* \"ERC20.sol\":2756:2760  from */\n      dup8\n        /* \"ERC20.sol\":2746:2761  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":2746:2771  _balances[from] -= amount */\n      dup3\n      dup3\n      sload\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":2798:2804  amount */\n      dup3\n        /* \"ERC20.sol\":2781:2790  _balances */\n      0x00\n        /* \"ERC20.sol\":2781:2794  _balances[to] */\n      dup1\n        /* \"ERC20.sol\":2791:2793  to */\n      dup7\n        /* \"ERC20.sol\":2781:2794  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":2781:2804  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":2814:2852  _spendAllowance(from, spender, amount) */\n      tag_85\n        /* \"ERC20.sol\":2830:2834  from */\n      dup6\n        /* \"ERC20.sol\":2836:2843  spender */\n      dup3\n        /* \"ERC20.sol\":2845:2851  amount */\n      dup6\n        /* \"ERC20.sol\":2814:2829  _spendAllowance */\n      tag_86\n        /* \"ERC20.sol\":2814:2852  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20.sol\":2862:2889  _transfer(from, to, amount) */\n      tag_87\n        /* \"ERC20.sol\":2872:2876  from */\n      dup6\n        /* \"ERC20.sol\":2878:2880  to */\n      dup6\n        /* \"ERC20.sol\":2882:2888  amount */\n      dup6\n        /* \"ERC20.sol\":2862:2871  _transfer */\n      tag_88\n        /* \"ERC20.sol\":2862:2889  _transfer(from, to, amount) */\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":2906:2910  true */\n      0x01\n        /* \"ERC20.sol\":2899:2910  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":2565:2917  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1013:1104  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"ERC20.sol\":1071:1076  uint8 */\n      0x00\n        /* \"ERC20.sol\":1095:1097  18 */\n      0x12\n        /* \"ERC20.sol\":1088:1097  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":1013:1104  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2982:3303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ERC20.sol\":3070:3074  bool */\n      0x00\n        /* \"ERC20.sol\":3086:3099  address owner */\n      dup1\n        /* \"ERC20.sol\":3102:3112  msg.sender */\n      caller\n        /* \"ERC20.sol\":3086:3112  address owner = msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":3150:3160  addedValue */\n      dup3\n        /* \"ERC20.sol\":3130:3139  _balances */\n      0x00\n        /* \"ERC20.sol\":3130:3146  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":3140:3145  owner */\n      dup4\n        /* \"ERC20.sol\":3130:3146  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3130:3160  _balances[owner] >= addedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":3122:3161  require(_balances[owner] >= addedValue) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"ERC20.sol\":3191:3201  addedValue */\n      dup3\n        /* \"ERC20.sol\":3171:3180  _balances */\n      0x00\n        /* \"ERC20.sol\":3171:3187  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":3181:3186  owner */\n      dup4\n        /* \"ERC20.sol\":3171:3187  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":3171:3201  _balances[owner] -= addedValue */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":3211:3275  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_93\n        /* \"ERC20.sol\":3220:3225  owner */\n      dup2\n        /* \"ERC20.sol\":3227:3234  spender */\n      dup6\n        /* \"ERC20.sol\":3264:3274  addedValue */\n      dup6\n        /* \"ERC20.sol\":3236:3261  allowance(owner, spender) */\n      tag_94\n        /* \"ERC20.sol\":3246:3251  owner */\n      dup6\n        /* \"ERC20.sol\":3253:3260  spender */\n      dup10\n        /* \"ERC20.sol\":3236:3245  allowance */\n      tag_61\n        /* \"ERC20.sol\":3236:3261  allowance(owner, spender) */\n      jump\t// in\n    tag_94:\n        /* \"ERC20.sol\":3236:3274  allowance(owner, spender) + addedValue */\n      tag_95\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_95:\n        /* \"ERC20.sol\":3211:3219  _approve */\n      tag_78\n        /* \"ERC20.sol\":3211:3275  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_93:\n        /* \"ERC20.sol\":3292:3296  true */\n      0x01\n        /* \"ERC20.sol\":3285:3296  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":2982:3303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1285:1410  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ERC20.sol\":1359:1366  uint256 */\n      0x00\n        /* \"ERC20.sol\":1385:1394  _balances */\n      dup1\n        /* \"ERC20.sol\":1385:1403  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":1395:1402  account */\n      dup4\n        /* \"ERC20.sol\":1385:1403  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":1378:1403  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":1285:1410  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":884:986  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20.sol\":940:953  string memory */\n      0x60\n        /* \"ERC20.sol\":972:979  _symbol */\n      0x04\n        /* \"ERC20.sol\":965:979  return _symbol */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_65\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_65\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":884:986  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3368:3838  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ERC20.sol\":3461:3465  bool */\n      0x00\n        /* \"ERC20.sol\":3477:3490  address owner */\n      dup1\n        /* \"ERC20.sol\":3493:3503  msg.sender */\n      caller\n        /* \"ERC20.sol\":3477:3503  address owner = msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":3533:3548  subtractedValue */\n      dup3\n        /* \"ERC20.sol\":3513:3522  _balances */\n      0x00\n        /* \"ERC20.sol\":3513:3529  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":3523:3528  owner */\n      dup4\n        /* \"ERC20.sol\":3513:3529  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":3513:3548  _balances[owner] += subtractedValue */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":3558:3582  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":3585:3610  allowance(owner, spender) */\n      tag_105\n        /* \"ERC20.sol\":3595:3600  owner */\n      dup3\n        /* \"ERC20.sol\":3602:3609  spender */\n      dup7\n        /* \"ERC20.sol\":3585:3594  allowance */\n      tag_61\n        /* \"ERC20.sol\":3585:3610  allowance(owner, spender) */\n      jump\t// in\n    tag_105:\n        /* \"ERC20.sol\":3558:3610  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":3648:3663  subtractedValue */\n      dup4\n        /* \"ERC20.sol\":3628:3644  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":3628:3663  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":3620:3705  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"ERC20.sol\":3739:3799  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_109\n        /* \"ERC20.sol\":3748:3753  owner */\n      dup3\n        /* \"ERC20.sol\":3755:3762  spender */\n      dup7\n        /* \"ERC20.sol\":3783:3798  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":3764:3780  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":3764:3798  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":3739:3747  _approve */\n      tag_78\n        /* \"ERC20.sol\":3739:3799  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_109:\n        /* \"ERC20.sol\":3827:3831  true */\n      0x01\n        /* \"ERC20.sol\":3820:3831  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC20.sol\":3368:3838  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1440:1887  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"ERC20.sol\":1519:1523  bool */\n      0x00\n        /* \"ERC20.sol\":1535:1548  address owner */\n      dup1\n        /* \"ERC20.sol\":1551:1561  msg.sender */\n      caller\n        /* \"ERC20.sol\":1535:1561  address owner = msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":1585:1595  msg.sender */\n      caller\n        /* \"ERC20.sol\":1579:1595  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":1579:1581  to */\n      dup5\n        /* \"ERC20.sol\":1579:1595  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":1571:1638  require(to != msg.sender, \"You cannot transfer token to your self\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"ERC20.sol\":1666:1675  _balances */\n      0x00\n        /* \"ERC20.sol\":1666:1682  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":1676:1681  owner */\n      dup3\n        /* \"ERC20.sol\":1666:1682  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":1656:1662  amount */\n      dup4\n        /* \"ERC20.sol\":1656:1682  amount <= _balances[owner] */\n      gt\n      iszero\n        /* \"ERC20.sol\":1648:1720  require(amount <= _balances[owner], \"You do not have sufficient tokens\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"ERC20.sol\":1750:1756  amount */\n      dup3\n        /* \"ERC20.sol\":1730:1739  _balances */\n      0x00\n        /* \"ERC20.sol\":1730:1746  _balances[owner] */\n      dup1\n        /* \"ERC20.sol\":1740:1745  owner */\n      dup4\n        /* \"ERC20.sol\":1730:1746  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":1730:1756  _balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":1783:1789  amount */\n      dup3\n        /* \"ERC20.sol\":1766:1775  _balances */\n      0x00\n        /* \"ERC20.sol\":1766:1779  _balances[to] */\n      dup1\n        /* \"ERC20.sol\":1776:1778  to */\n      dup7\n        /* \"ERC20.sol\":1766:1779  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":1766:1789  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":1799:1827  _transfer(owner, to, amount) */\n      tag_118\n        /* \"ERC20.sol\":1809:1814  owner */\n      dup2\n        /* \"ERC20.sol\":1816:1818  to */\n      dup6\n        /* \"ERC20.sol\":1820:1826  amount */\n      dup6\n        /* \"ERC20.sol\":1799:1808  _transfer */\n      tag_88\n        /* \"ERC20.sol\":1799:1827  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"ERC20.sol\":1853:1859  amount */\n      dup3\n        /* \"ERC20.sol\":1837:1849  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":1837:1859  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":1876:1880  true */\n      0x01\n        /* \"ERC20.sol\":1869:1880  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":1440:1887  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1966:2115  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"ERC20.sol\":2055:2062  uint256 */\n      0x00\n        /* \"ERC20.sol\":2081:2092  _allowances */\n      0x01\n        /* \"ERC20.sol\":2081:2099  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":2093:2098  owner */\n      dup5\n        /* \"ERC20.sol\":2081:2099  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":2081:2108  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":2100:2107  spender */\n      dup4\n        /* \"ERC20.sol\":2081:2108  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":2074:2108  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":1966:2115  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5697:6067  function _approve(... */\n    tag_78:\n        /* \"ERC20.sol\":5845:5846  0 */\n      0x00\n        /* \"ERC20.sol\":5828:5847  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5828:5833  owner */\n      dup4\n        /* \"ERC20.sol\":5828:5847  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5820:5888  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"ERC20.sol\":5925:5926  0 */\n      0x00\n        /* \"ERC20.sol\":5906:5927  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5906:5913  spender */\n      dup3\n        /* \"ERC20.sol\":5906:5927  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5898:5966  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"ERC20.sol\":6007:6013  amount */\n      dup1\n        /* \"ERC20.sol\":5977:5988  _allowances */\n      0x01\n        /* \"ERC20.sol\":5977:5995  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":5989:5994  owner */\n      dup6\n        /* \"ERC20.sol\":5977:5995  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5977:6004  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":5996:6003  spender */\n      dup5\n        /* \"ERC20.sol\":5977:6004  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5977:6013  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6044:6051  spender */\n      dup2\n        /* \"ERC20.sol\":6028:6060  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":6037:6042  owner */\n      dup4\n        /* \"ERC20.sol\":6028:6060  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":6053:6059  amount */\n      dup4\n        /* \"ERC20.sol\":6028:6060  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":5697:6067  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":6134:6575  function _spendAllowance(... */\n    tag_86:\n        /* \"ERC20.sol\":6264:6288  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":6291:6316  allowance(owner, spender) */\n      tag_130\n        /* \"ERC20.sol\":6301:6306  owner */\n      dup5\n        /* \"ERC20.sol\":6308:6315  spender */\n      dup5\n        /* \"ERC20.sol\":6291:6300  allowance */\n      tag_61\n        /* \"ERC20.sol\":6291:6316  allowance(owner, spender) */\n      jump\t// in\n    tag_130:\n        /* \"ERC20.sol\":6264:6316  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":6350:6367  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC20.sol\":6330:6346  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6330:6367  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20.sol\":6326:6569  if (currentAllowance != type(uint256).max) {... */\n      tag_131\n      jumpi\n        /* \"ERC20.sol\":6411:6417  amount */\n      dup2\n        /* \"ERC20.sol\":6391:6407  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6391:6417  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":6383:6451  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"ERC20.sol\":6493:6544  _approve(owner, spender, currentAllowance - amount) */\n      tag_135\n        /* \"ERC20.sol\":6502:6507  owner */\n      dup5\n        /* \"ERC20.sol\":6509:6516  spender */\n      dup5\n        /* \"ERC20.sol\":6537:6543  amount */\n      dup5\n        /* \"ERC20.sol\":6518:6534  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":6518:6543  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":6493:6501  _approve */\n      tag_78\n        /* \"ERC20.sol\":6493:6544  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_135:\n        /* \"ERC20.sol\":6326:6569  if (currentAllowance != type(uint256).max) {... */\n    tag_131:\n        /* \"ERC20.sol\":6254:6575  {... */\n      pop\n        /* \"ERC20.sol\":6134:6575  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3889:4540  function _transfer(... */\n    tag_88:\n        /* \"ERC20.sol\":4031:4032  0 */\n      0x00\n        /* \"ERC20.sol\":4015:4033  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":4015:4019  from */\n      dup4\n        /* \"ERC20.sol\":4015:4033  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":4007:4075  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"ERC20.sol\":4107:4108  0 */\n      0x00\n        /* \"ERC20.sol\":4093:4109  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":4093:4095  to */\n      dup3\n        /* \"ERC20.sol\":4093:4109  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":4085:4149  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"ERC20.sol\":4160:4198  _beforeTokenTransfer(from, to, amount) */\n      tag_143\n        /* \"ERC20.sol\":4181:4185  from */\n      dup4\n        /* \"ERC20.sol\":4187:4189  to */\n      dup4\n        /* \"ERC20.sol\":4191:4197  amount */\n      dup4\n        /* \"ERC20.sol\":4160:4180  _beforeTokenTransfer */\n      tag_144\n        /* \"ERC20.sol\":4160:4198  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_143:\n        /* \"ERC20.sol\":4209:4228  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":4231:4240  _balances */\n      dup1\n        /* \"ERC20.sol\":4231:4246  _balances[from] */\n      0x00\n        /* \"ERC20.sol\":4241:4245  from */\n      dup6\n        /* \"ERC20.sol\":4231:4246  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4209:4246  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC20.sol\":4279:4285  amount */\n      dup2\n        /* \"ERC20.sol\":4264:4275  fromBalance */\n      dup2\n        /* \"ERC20.sol\":4264:4285  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":4256:4328  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"ERC20.sol\":4394:4400  amount */\n      dup2\n        /* \"ERC20.sol\":4380:4391  fromBalance */\n      dup2\n        /* \"ERC20.sol\":4380:4400  fromBalance - amount */\n      sub\n        /* \"ERC20.sol\":4362:4371  _balances */\n      0x00\n        /* \"ERC20.sol\":4362:4377  _balances[from] */\n      dup1\n        /* \"ERC20.sol\":4372:4376  from */\n      dup7\n        /* \"ERC20.sol\":4362:4377  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4362:4400  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":4437:4443  amount */\n      dup2\n        /* \"ERC20.sol\":4420:4429  _balances */\n      0x00\n        /* \"ERC20.sol\":4420:4433  _balances[to] */\n      dup1\n        /* \"ERC20.sol\":4430:4432  to */\n      dup6\n        /* \"ERC20.sol\":4420:4433  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":4420:4443  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":4474:4476  to */\n      dup3\n        /* \"ERC20.sol\":4459:4485  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":4468:4472  from */\n      dup5\n        /* \"ERC20.sol\":4459:4485  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":4478:4484  amount */\n      dup5\n        /* \"ERC20.sol\":4459:4485  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":4496:4533  _afterTokenTransfer(from, to, amount) */\n      tag_150\n        /* \"ERC20.sol\":4516:4520  from */\n      dup5\n        /* \"ERC20.sol\":4522:4524  to */\n      dup5\n        /* \"ERC20.sol\":4526:4532  amount */\n      dup5\n        /* \"ERC20.sol\":4496:4515  _afterTokenTransfer */\n      tag_151\n        /* \"ERC20.sol\":4496:4533  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_150:\n        /* \"ERC20.sol\":3997:4540  {... */\n      pop\n        /* \"ERC20.sol\":3889:4540  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":6611:6732  function _beforeTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":6767:6887  function _afterTokenTransfer(... */\n    tag_151:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_154:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_155:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_156:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_200:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_200)\n    tag_202:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_157:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_158:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_205\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_154\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":818:889   */\n      tag_206\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_155\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_207\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_156\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":988:1017   */\n      tag_208\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_210\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_158\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_160:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_162:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_163:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_216\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_162\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_164:\n        /* \"#utility.yul\":1983:2007   */\n      tag_218\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_163\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_219:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_165:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_221\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_164\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_166:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_167:\n        /* \"#utility.yul\":2339:2363   */\n      tag_224\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_166\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_225:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_168:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_227\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_167\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_230\n      tag_160\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2632:2751   */\n    tag_229:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_231\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_165\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_232\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_168\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_169:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_170:\n        /* \"#utility.yul\":3196:3217   */\n      tag_235\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_169\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_237\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_170\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_171:\n        /* \"#utility.yul\":3533:3557   */\n      tag_239\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_166\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_241\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_171\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_244\n      tag_160\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3908:4027   */\n    tag_243:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_245\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_165\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_246\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_165\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_247\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_168\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_172:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_173:\n        /* \"#utility.yul\":4598:4620   */\n      tag_250\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_172\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_252\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_173\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_255\n      tag_160\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4929:5048   */\n    tag_254:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_256\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_165\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_259\n      tag_160\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5281:5400   */\n    tag_258:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_260\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_165\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_261\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_165\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_174:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_264:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_266\n      tag_174\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6084:6168   */\n    tag_265:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6400   */\n    tag_175:\n        /* \"#utility.yul\":6320:6354   */\n      0x596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e\n        /* \"#utility.yul\":6316:6317   */\n      0x00\n        /* \"#utility.yul\":6308:6314   */\n      dup3\n        /* \"#utility.yul\":6304:6318   */\n      add\n        /* \"#utility.yul\":6297:6355   */\n      mstore\n        /* \"#utility.yul\":6389:6392   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6384:6386   */\n      0x20\n        /* \"#utility.yul\":6376:6382   */\n      dup3\n        /* \"#utility.yul\":6372:6387   */\n      add\n        /* \"#utility.yul\":6365:6393   */\n      mstore\n        /* \"#utility.yul\":6180:6400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6406:6772   */\n    tag_176:\n        /* \"#utility.yul\":6548:6551   */\n      0x00\n        /* \"#utility.yul\":6569:6636   */\n      tag_269\n        /* \"#utility.yul\":6633:6635   */\n      0x21\n        /* \"#utility.yul\":6628:6631   */\n      dup4\n        /* \"#utility.yul\":6569:6636   */\n      tag_155\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6562:6636   */\n      swap2\n      pop\n        /* \"#utility.yul\":6645:6738   */\n      tag_270\n        /* \"#utility.yul\":6734:6737   */\n      dup3\n        /* \"#utility.yul\":6645:6738   */\n      tag_175\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6763:6765   */\n      0x40\n        /* \"#utility.yul\":6758:6761   */\n      dup3\n        /* \"#utility.yul\":6754:6766   */\n      add\n        /* \"#utility.yul\":6747:6766   */\n      swap1\n      pop\n        /* \"#utility.yul\":6406:6772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6778:7197   */\n    tag_73:\n        /* \"#utility.yul\":6944:6948   */\n      0x00\n        /* \"#utility.yul\":6982:6984   */\n      0x20\n        /* \"#utility.yul\":6971:6980   */\n      dup3\n        /* \"#utility.yul\":6967:6985   */\n      add\n        /* \"#utility.yul\":6959:6985   */\n      swap1\n      pop\n        /* \"#utility.yul\":7031:7040   */\n      dup2\n        /* \"#utility.yul\":7025:7029   */\n      dup2\n        /* \"#utility.yul\":7021:7041   */\n      sub\n        /* \"#utility.yul\":7017:7018   */\n      0x00\n        /* \"#utility.yul\":7006:7015   */\n      dup4\n        /* \"#utility.yul\":7002:7019   */\n      add\n        /* \"#utility.yul\":6995:7042   */\n      mstore\n        /* \"#utility.yul\":7059:7190   */\n      tag_272\n        /* \"#utility.yul\":7185:7189   */\n      dup2\n        /* \"#utility.yul\":7059:7190   */\n      tag_176\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7051:7190   */\n      swap1\n      pop\n        /* \"#utility.yul\":6778:7197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7203:7380   */\n    tag_177:\n        /* \"#utility.yul\":7343:7372   */\n      0x596f752063616e6e6f7420617070726f766520796f757273656c660000000000\n        /* \"#utility.yul\":7339:7340   */\n      0x00\n        /* \"#utility.yul\":7331:7337   */\n      dup3\n        /* \"#utility.yul\":7327:7341   */\n      add\n        /* \"#utility.yul\":7320:7373   */\n      mstore\n        /* \"#utility.yul\":7203:7380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7386:7752   */\n    tag_178:\n        /* \"#utility.yul\":7528:7531   */\n      0x00\n        /* \"#utility.yul\":7549:7616   */\n      tag_275\n        /* \"#utility.yul\":7613:7615   */\n      0x1b\n        /* \"#utility.yul\":7608:7611   */\n      dup4\n        /* \"#utility.yul\":7549:7616   */\n      tag_155\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7542:7616   */\n      swap2\n      pop\n        /* \"#utility.yul\":7625:7718   */\n      tag_276\n        /* \"#utility.yul\":7714:7717   */\n      dup3\n        /* \"#utility.yul\":7625:7718   */\n      tag_177\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7743:7745   */\n      0x20\n        /* \"#utility.yul\":7738:7741   */\n      dup3\n        /* \"#utility.yul\":7734:7746   */\n      add\n        /* \"#utility.yul\":7727:7746   */\n      swap1\n      pop\n        /* \"#utility.yul\":7386:7752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7758:8177   */\n    tag_76:\n        /* \"#utility.yul\":7924:7928   */\n      0x00\n        /* \"#utility.yul\":7962:7964   */\n      0x20\n        /* \"#utility.yul\":7951:7960   */\n      dup3\n        /* \"#utility.yul\":7947:7965   */\n      add\n        /* \"#utility.yul\":7939:7965   */\n      swap1\n      pop\n        /* \"#utility.yul\":8011:8020   */\n      dup2\n        /* \"#utility.yul\":8005:8009   */\n      dup2\n        /* \"#utility.yul\":8001:8021   */\n      sub\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7986:7995   */\n      dup4\n        /* \"#utility.yul\":7982:7999   */\n      add\n        /* \"#utility.yul\":7975:8022   */\n      mstore\n        /* \"#utility.yul\":8039:8170   */\n      tag_278\n        /* \"#utility.yul\":8165:8169   */\n      dup2\n        /* \"#utility.yul\":8039:8170   */\n      tag_178\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8031:8170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7758:8177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8183:8363   */\n    tag_179:\n        /* \"#utility.yul\":8231:8308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8221:8309   */\n      mstore\n        /* \"#utility.yul\":8328:8332   */\n      0x11\n        /* \"#utility.yul\":8325:8326   */\n      0x04\n        /* \"#utility.yul\":8318:8333   */\n      mstore\n        /* \"#utility.yul\":8352:8356   */\n      0x24\n        /* \"#utility.yul\":8349:8350   */\n      0x00\n        /* \"#utility.yul\":8342:8357   */\n      revert\n        /* \"#utility.yul\":8369:8563   */\n    tag_82:\n        /* \"#utility.yul\":8409:8413   */\n      0x00\n        /* \"#utility.yul\":8429:8449   */\n      tag_281\n        /* \"#utility.yul\":8447:8448   */\n      dup3\n        /* \"#utility.yul\":8429:8449   */\n      tag_166\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8424:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8463:8483   */\n      tag_282\n        /* \"#utility.yul\":8481:8482   */\n      dup4\n        /* \"#utility.yul\":8463:8483   */\n      tag_166\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8458:8483   */\n      swap3\n      pop\n        /* \"#utility.yul\":8507:8508   */\n      dup3\n        /* \"#utility.yul\":8504:8505   */\n      dup3\n        /* \"#utility.yul\":8500:8509   */\n      sub\n        /* \"#utility.yul\":8492:8509   */\n      swap1\n      pop\n        /* \"#utility.yul\":8531:8532   */\n      dup2\n        /* \"#utility.yul\":8525:8529   */\n      dup2\n        /* \"#utility.yul\":8522:8533   */\n      gt\n        /* \"#utility.yul\":8519:8556   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":8536:8554   */\n      tag_284\n      tag_179\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8519:8556   */\n    tag_283:\n        /* \"#utility.yul\":8369:8563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8569:8760   */\n    tag_84:\n        /* \"#utility.yul\":8609:8612   */\n      0x00\n        /* \"#utility.yul\":8628:8648   */\n      tag_286\n        /* \"#utility.yul\":8646:8647   */\n      dup3\n        /* \"#utility.yul\":8628:8648   */\n      tag_166\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8623:8648   */\n      swap2\n      pop\n        /* \"#utility.yul\":8662:8682   */\n      tag_287\n        /* \"#utility.yul\":8680:8681   */\n      dup4\n        /* \"#utility.yul\":8662:8682   */\n      tag_166\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8657:8682   */\n      swap3\n      pop\n        /* \"#utility.yul\":8705:8706   */\n      dup3\n        /* \"#utility.yul\":8702:8703   */\n      dup3\n        /* \"#utility.yul\":8698:8707   */\n      add\n        /* \"#utility.yul\":8691:8707   */\n      swap1\n      pop\n        /* \"#utility.yul\":8726:8729   */\n      dup1\n        /* \"#utility.yul\":8723:8724   */\n      dup3\n        /* \"#utility.yul\":8720:8730   */\n      gt\n        /* \"#utility.yul\":8717:8753   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":8733:8751   */\n      tag_289\n      tag_179\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8717:8753   */\n    tag_288:\n        /* \"#utility.yul\":8569:8760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8766:8990   */\n    tag_180:\n        /* \"#utility.yul\":8906:8940   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":8902:8903   */\n      0x00\n        /* \"#utility.yul\":8894:8900   */\n      dup3\n        /* \"#utility.yul\":8890:8904   */\n      add\n        /* \"#utility.yul\":8883:8941   */\n      mstore\n        /* \"#utility.yul\":8975:8982   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8970:8972   */\n      0x20\n        /* \"#utility.yul\":8962:8968   */\n      dup3\n        /* \"#utility.yul\":8958:8973   */\n      add\n        /* \"#utility.yul\":8951:8983   */\n      mstore\n        /* \"#utility.yul\":8766:8990   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8996:9362   */\n    tag_181:\n        /* \"#utility.yul\":9138:9141   */\n      0x00\n        /* \"#utility.yul\":9159:9226   */\n      tag_292\n        /* \"#utility.yul\":9223:9225   */\n      0x25\n        /* \"#utility.yul\":9218:9221   */\n      dup4\n        /* \"#utility.yul\":9159:9226   */\n      tag_155\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9152:9226   */\n      swap2\n      pop\n        /* \"#utility.yul\":9235:9328   */\n      tag_293\n        /* \"#utility.yul\":9324:9327   */\n      dup3\n        /* \"#utility.yul\":9235:9328   */\n      tag_180\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9353:9355   */\n      0x40\n        /* \"#utility.yul\":9348:9351   */\n      dup3\n        /* \"#utility.yul\":9344:9356   */\n      add\n        /* \"#utility.yul\":9337:9356   */\n      swap1\n      pop\n        /* \"#utility.yul\":8996:9362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9368:9787   */\n    tag_108:\n        /* \"#utility.yul\":9534:9538   */\n      0x00\n        /* \"#utility.yul\":9572:9574   */\n      0x20\n        /* \"#utility.yul\":9561:9570   */\n      dup3\n        /* \"#utility.yul\":9557:9575   */\n      add\n        /* \"#utility.yul\":9549:9575   */\n      swap1\n      pop\n        /* \"#utility.yul\":9621:9630   */\n      dup2\n        /* \"#utility.yul\":9615:9619   */\n      dup2\n        /* \"#utility.yul\":9611:9631   */\n      sub\n        /* \"#utility.yul\":9607:9608   */\n      0x00\n        /* \"#utility.yul\":9596:9605   */\n      dup4\n        /* \"#utility.yul\":9592:9609   */\n      add\n        /* \"#utility.yul\":9585:9632   */\n      mstore\n        /* \"#utility.yul\":9649:9780   */\n      tag_295\n        /* \"#utility.yul\":9775:9779   */\n      dup2\n        /* \"#utility.yul\":9649:9780   */\n      tag_181\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9641:9780   */\n      swap1\n      pop\n        /* \"#utility.yul\":9368:9787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9793:10018   */\n    tag_182:\n        /* \"#utility.yul\":9933:9967   */\n      0x596f752063616e6e6f74207472616e7366657220746f6b656e20746f20796f75\n        /* \"#utility.yul\":9929:9930   */\n      0x00\n        /* \"#utility.yul\":9921:9927   */\n      dup3\n        /* \"#utility.yul\":9917:9931   */\n      add\n        /* \"#utility.yul\":9910:9968   */\n      mstore\n        /* \"#utility.yul\":10002:10010   */\n      0x722073656c660000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9997:9999   */\n      0x20\n        /* \"#utility.yul\":9989:9995   */\n      dup3\n        /* \"#utility.yul\":9985:10000   */\n      add\n        /* \"#utility.yul\":9978:10011   */\n      mstore\n        /* \"#utility.yul\":9793:10018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10390   */\n    tag_183:\n        /* \"#utility.yul\":10166:10169   */\n      0x00\n        /* \"#utility.yul\":10187:10254   */\n      tag_298\n        /* \"#utility.yul\":10251:10253   */\n      0x26\n        /* \"#utility.yul\":10246:10249   */\n      dup4\n        /* \"#utility.yul\":10187:10254   */\n      tag_155\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10180:10254   */\n      swap2\n      pop\n        /* \"#utility.yul\":10263:10356   */\n      tag_299\n        /* \"#utility.yul\":10352:10355   */\n      dup3\n        /* \"#utility.yul\":10263:10356   */\n      tag_182\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10381:10383   */\n      0x40\n        /* \"#utility.yul\":10376:10379   */\n      dup3\n        /* \"#utility.yul\":10372:10384   */\n      add\n        /* \"#utility.yul\":10365:10384   */\n      swap1\n      pop\n        /* \"#utility.yul\":10024:10390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10396:10815   */\n    tag_113:\n        /* \"#utility.yul\":10562:10566   */\n      0x00\n        /* \"#utility.yul\":10600:10602   */\n      0x20\n        /* \"#utility.yul\":10589:10598   */\n      dup3\n        /* \"#utility.yul\":10585:10603   */\n      add\n        /* \"#utility.yul\":10577:10603   */\n      swap1\n      pop\n        /* \"#utility.yul\":10649:10658   */\n      dup2\n        /* \"#utility.yul\":10643:10647   */\n      dup2\n        /* \"#utility.yul\":10639:10659   */\n      sub\n        /* \"#utility.yul\":10635:10636   */\n      0x00\n        /* \"#utility.yul\":10624:10633   */\n      dup4\n        /* \"#utility.yul\":10620:10637   */\n      add\n        /* \"#utility.yul\":10613:10660   */\n      mstore\n        /* \"#utility.yul\":10677:10808   */\n      tag_301\n        /* \"#utility.yul\":10803:10807   */\n      dup2\n        /* \"#utility.yul\":10677:10808   */\n      tag_183\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10669:10808   */\n      swap1\n      pop\n        /* \"#utility.yul\":10396:10815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10821:11044   */\n    tag_184:\n        /* \"#utility.yul\":10961:10995   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":10957:10958   */\n      0x00\n        /* \"#utility.yul\":10949:10955   */\n      dup3\n        /* \"#utility.yul\":10945:10959   */\n      add\n        /* \"#utility.yul\":10938:10996   */\n      mstore\n        /* \"#utility.yul\":11030:11036   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11025:11027   */\n      0x20\n        /* \"#utility.yul\":11017:11023   */\n      dup3\n        /* \"#utility.yul\":11013:11028   */\n      add\n        /* \"#utility.yul\":11006:11037   */\n      mstore\n        /* \"#utility.yul\":10821:11044   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11050:11416   */\n    tag_185:\n        /* \"#utility.yul\":11192:11195   */\n      0x00\n        /* \"#utility.yul\":11213:11280   */\n      tag_304\n        /* \"#utility.yul\":11277:11279   */\n      0x24\n        /* \"#utility.yul\":11272:11275   */\n      dup4\n        /* \"#utility.yul\":11213:11280   */\n      tag_155\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11206:11280   */\n      swap2\n      pop\n        /* \"#utility.yul\":11289:11382   */\n      tag_305\n        /* \"#utility.yul\":11378:11381   */\n      dup3\n        /* \"#utility.yul\":11289:11382   */\n      tag_184\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11407:11409   */\n      0x40\n        /* \"#utility.yul\":11402:11405   */\n      dup3\n        /* \"#utility.yul\":11398:11410   */\n      add\n        /* \"#utility.yul\":11391:11410   */\n      swap1\n      pop\n        /* \"#utility.yul\":11050:11416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11422:11841   */\n    tag_124:\n        /* \"#utility.yul\":11588:11592   */\n      0x00\n        /* \"#utility.yul\":11626:11628   */\n      0x20\n        /* \"#utility.yul\":11615:11624   */\n      dup3\n        /* \"#utility.yul\":11611:11629   */\n      add\n        /* \"#utility.yul\":11603:11629   */\n      swap1\n      pop\n        /* \"#utility.yul\":11675:11684   */\n      dup2\n        /* \"#utility.yul\":11669:11673   */\n      dup2\n        /* \"#utility.yul\":11665:11685   */\n      sub\n        /* \"#utility.yul\":11661:11662   */\n      0x00\n        /* \"#utility.yul\":11650:11659   */\n      dup4\n        /* \"#utility.yul\":11646:11663   */\n      add\n        /* \"#utility.yul\":11639:11686   */\n      mstore\n        /* \"#utility.yul\":11703:11834   */\n      tag_307\n        /* \"#utility.yul\":11829:11833   */\n      dup2\n        /* \"#utility.yul\":11703:11834   */\n      tag_185\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11695:11834   */\n      swap1\n      pop\n        /* \"#utility.yul\":11422:11841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11847:12068   */\n    tag_186:\n        /* \"#utility.yul\":11987:12021   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11983:11984   */\n      0x00\n        /* \"#utility.yul\":11975:11981   */\n      dup3\n        /* \"#utility.yul\":11971:11985   */\n      add\n        /* \"#utility.yul\":11964:12022   */\n      mstore\n        /* \"#utility.yul\":12056:12060   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12051:12053   */\n      0x20\n        /* \"#utility.yul\":12043:12049   */\n      dup3\n        /* \"#utility.yul\":12039:12054   */\n      add\n        /* \"#utility.yul\":12032:12061   */\n      mstore\n        /* \"#utility.yul\":11847:12068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12074:12440   */\n    tag_187:\n        /* \"#utility.yul\":12216:12219   */\n      0x00\n        /* \"#utility.yul\":12237:12304   */\n      tag_310\n        /* \"#utility.yul\":12301:12303   */\n      0x22\n        /* \"#utility.yul\":12296:12299   */\n      dup4\n        /* \"#utility.yul\":12237:12304   */\n      tag_155\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12230:12304   */\n      swap2\n      pop\n        /* \"#utility.yul\":12313:12406   */\n      tag_311\n        /* \"#utility.yul\":12402:12405   */\n      dup3\n        /* \"#utility.yul\":12313:12406   */\n      tag_186\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12431:12433   */\n      0x40\n        /* \"#utility.yul\":12426:12429   */\n      dup3\n        /* \"#utility.yul\":12422:12434   */\n      add\n        /* \"#utility.yul\":12415:12434   */\n      swap1\n      pop\n        /* \"#utility.yul\":12074:12440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12446:12865   */\n    tag_127:\n        /* \"#utility.yul\":12612:12616   */\n      0x00\n        /* \"#utility.yul\":12650:12652   */\n      0x20\n        /* \"#utility.yul\":12639:12648   */\n      dup3\n        /* \"#utility.yul\":12635:12653   */\n      add\n        /* \"#utility.yul\":12627:12653   */\n      swap1\n      pop\n        /* \"#utility.yul\":12699:12708   */\n      dup2\n        /* \"#utility.yul\":12693:12697   */\n      dup2\n        /* \"#utility.yul\":12689:12709   */\n      sub\n        /* \"#utility.yul\":12685:12686   */\n      0x00\n        /* \"#utility.yul\":12674:12683   */\n      dup4\n        /* \"#utility.yul\":12670:12687   */\n      add\n        /* \"#utility.yul\":12663:12710   */\n      mstore\n        /* \"#utility.yul\":12727:12858   */\n      tag_313\n        /* \"#utility.yul\":12853:12857   */\n      dup2\n        /* \"#utility.yul\":12727:12858   */\n      tag_187\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12719:12858   */\n      swap1\n      pop\n        /* \"#utility.yul\":12446:12865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12871:13050   */\n    tag_188:\n        /* \"#utility.yul\":13011:13042   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":13007:13008   */\n      0x00\n        /* \"#utility.yul\":12999:13005   */\n      dup3\n        /* \"#utility.yul\":12995:13009   */\n      add\n        /* \"#utility.yul\":12988:13043   */\n      mstore\n        /* \"#utility.yul\":12871:13050   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13056:13422   */\n    tag_189:\n        /* \"#utility.yul\":13198:13201   */\n      0x00\n        /* \"#utility.yul\":13219:13286   */\n      tag_316\n        /* \"#utility.yul\":13283:13285   */\n      0x1d\n        /* \"#utility.yul\":13278:13281   */\n      dup4\n        /* \"#utility.yul\":13219:13286   */\n      tag_155\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13212:13286   */\n      swap2\n      pop\n        /* \"#utility.yul\":13295:13388   */\n      tag_317\n        /* \"#utility.yul\":13384:13387   */\n      dup3\n        /* \"#utility.yul\":13295:13388   */\n      tag_188\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":13413:13415   */\n      0x20\n        /* \"#utility.yul\":13408:13411   */\n      dup3\n        /* \"#utility.yul\":13404:13416   */\n      add\n        /* \"#utility.yul\":13397:13416   */\n      swap1\n      pop\n        /* \"#utility.yul\":13056:13422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13428:13847   */\n    tag_134:\n        /* \"#utility.yul\":13594:13598   */\n      0x00\n        /* \"#utility.yul\":13632:13634   */\n      0x20\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13617:13635   */\n      add\n        /* \"#utility.yul\":13609:13635   */\n      swap1\n      pop\n        /* \"#utility.yul\":13681:13690   */\n      dup2\n        /* \"#utility.yul\":13675:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13691   */\n      sub\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13656:13665   */\n      dup4\n        /* \"#utility.yul\":13652:13669   */\n      add\n        /* \"#utility.yul\":13645:13692   */\n      mstore\n        /* \"#utility.yul\":13709:13840   */\n      tag_319\n        /* \"#utility.yul\":13835:13839   */\n      dup2\n        /* \"#utility.yul\":13709:13840   */\n      tag_189\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13701:13840   */\n      swap1\n      pop\n        /* \"#utility.yul\":13428:13847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13853:14077   */\n    tag_190:\n        /* \"#utility.yul\":13993:14027   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13989:13990   */\n      0x00\n        /* \"#utility.yul\":13981:13987   */\n      dup3\n        /* \"#utility.yul\":13977:13991   */\n      add\n        /* \"#utility.yul\":13970:14028   */\n      mstore\n        /* \"#utility.yul\":14062:14069   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14057:14059   */\n      0x20\n        /* \"#utility.yul\":14049:14055   */\n      dup3\n        /* \"#utility.yul\":14045:14060   */\n      add\n        /* \"#utility.yul\":14038:14070   */\n      mstore\n        /* \"#utility.yul\":13853:14077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14083:14449   */\n    tag_191:\n        /* \"#utility.yul\":14225:14228   */\n      0x00\n        /* \"#utility.yul\":14246:14313   */\n      tag_322\n        /* \"#utility.yul\":14310:14312   */\n      0x25\n        /* \"#utility.yul\":14305:14308   */\n      dup4\n        /* \"#utility.yul\":14246:14313   */\n      tag_155\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14239:14313   */\n      swap2\n      pop\n        /* \"#utility.yul\":14322:14415   */\n      tag_323\n        /* \"#utility.yul\":14411:14414   */\n      dup3\n        /* \"#utility.yul\":14322:14415   */\n      tag_190\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":14440:14442   */\n      0x40\n        /* \"#utility.yul\":14435:14438   */\n      dup3\n        /* \"#utility.yul\":14431:14443   */\n      add\n        /* \"#utility.yul\":14424:14443   */\n      swap1\n      pop\n        /* \"#utility.yul\":14083:14449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14455:14874   */\n    tag_139:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14648:14657   */\n      dup3\n        /* \"#utility.yul\":14644:14662   */\n      add\n        /* \"#utility.yul\":14636:14662   */\n      swap1\n      pop\n        /* \"#utility.yul\":14708:14717   */\n      dup2\n        /* \"#utility.yul\":14702:14706   */\n      dup2\n        /* \"#utility.yul\":14698:14718   */\n      sub\n        /* \"#utility.yul\":14694:14695   */\n      0x00\n        /* \"#utility.yul\":14683:14692   */\n      dup4\n        /* \"#utility.yul\":14679:14696   */\n      add\n        /* \"#utility.yul\":14672:14719   */\n      mstore\n        /* \"#utility.yul\":14736:14867   */\n      tag_325\n        /* \"#utility.yul\":14862:14866   */\n      dup2\n        /* \"#utility.yul\":14736:14867   */\n      tag_191\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14728:14867   */\n      swap1\n      pop\n        /* \"#utility.yul\":14455:14874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14880:15102   */\n    tag_192:\n        /* \"#utility.yul\":15020:15054   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":15016:15017   */\n      0x00\n        /* \"#utility.yul\":15008:15014   */\n      dup3\n        /* \"#utility.yul\":15004:15018   */\n      add\n        /* \"#utility.yul\":14997:15055   */\n      mstore\n        /* \"#utility.yul\":15089:15094   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"#utility.yul\":15076:15082   */\n      dup3\n        /* \"#utility.yul\":15072:15087   */\n      add\n        /* \"#utility.yul\":15065:15095   */\n      mstore\n        /* \"#utility.yul\":14880:15102   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15108:15474   */\n    tag_193:\n        /* \"#utility.yul\":15250:15253   */\n      0x00\n        /* \"#utility.yul\":15271:15338   */\n      tag_328\n        /* \"#utility.yul\":15335:15337   */\n      0x23\n        /* \"#utility.yul\":15330:15333   */\n      dup4\n        /* \"#utility.yul\":15271:15338   */\n      tag_155\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":15264:15338   */\n      swap2\n      pop\n        /* \"#utility.yul\":15347:15440   */\n      tag_329\n        /* \"#utility.yul\":15436:15439   */\n      dup3\n        /* \"#utility.yul\":15347:15440   */\n      tag_192\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":15465:15467   */\n      0x40\n        /* \"#utility.yul\":15460:15463   */\n      dup3\n        /* \"#utility.yul\":15456:15468   */\n      add\n        /* \"#utility.yul\":15449:15468   */\n      swap1\n      pop\n        /* \"#utility.yul\":15108:15474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15480:15899   */\n    tag_142:\n        /* \"#utility.yul\":15646:15650   */\n      0x00\n        /* \"#utility.yul\":15684:15686   */\n      0x20\n        /* \"#utility.yul\":15673:15682   */\n      dup3\n        /* \"#utility.yul\":15669:15687   */\n      add\n        /* \"#utility.yul\":15661:15687   */\n      swap1\n      pop\n        /* \"#utility.yul\":15733:15742   */\n      dup2\n        /* \"#utility.yul\":15727:15731   */\n      dup2\n        /* \"#utility.yul\":15723:15743   */\n      sub\n        /* \"#utility.yul\":15719:15720   */\n      0x00\n        /* \"#utility.yul\":15708:15717   */\n      dup4\n        /* \"#utility.yul\":15704:15721   */\n      add\n        /* \"#utility.yul\":15697:15744   */\n      mstore\n        /* \"#utility.yul\":15761:15892   */\n      tag_331\n        /* \"#utility.yul\":15887:15891   */\n      dup2\n        /* \"#utility.yul\":15761:15892   */\n      tag_193\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":15753:15892   */\n      swap1\n      pop\n        /* \"#utility.yul\":15480:15899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15905:16130   */\n    tag_194:\n        /* \"#utility.yul\":16045:16079   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":16041:16042   */\n      0x00\n        /* \"#utility.yul\":16033:16039   */\n      dup3\n        /* \"#utility.yul\":16029:16043   */\n      add\n        /* \"#utility.yul\":16022:16080   */\n      mstore\n        /* \"#utility.yul\":16114:16122   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16109:16111   */\n      0x20\n        /* \"#utility.yul\":16101:16107   */\n      dup3\n        /* \"#utility.yul\":16097:16112   */\n      add\n        /* \"#utility.yul\":16090:16123   */\n      mstore\n        /* \"#utility.yul\":15905:16130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16136:16502   */\n    tag_195:\n        /* \"#utility.yul\":16278:16281   */\n      0x00\n        /* \"#utility.yul\":16299:16366   */\n      tag_334\n        /* \"#utility.yul\":16363:16365   */\n      0x26\n        /* \"#utility.yul\":16358:16361   */\n      dup4\n        /* \"#utility.yul\":16299:16366   */\n      tag_155\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":16292:16366   */\n      swap2\n      pop\n        /* \"#utility.yul\":16375:16468   */\n      tag_335\n        /* \"#utility.yul\":16464:16467   */\n      dup3\n        /* \"#utility.yul\":16375:16468   */\n      tag_194\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":16493:16495   */\n      0x40\n        /* \"#utility.yul\":16488:16491   */\n      dup3\n        /* \"#utility.yul\":16484:16496   */\n      add\n        /* \"#utility.yul\":16477:16496   */\n      swap1\n      pop\n        /* \"#utility.yul\":16136:16502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16508:16927   */\n    tag_147:\n        /* \"#utility.yul\":16674:16678   */\n      0x00\n        /* \"#utility.yul\":16712:16714   */\n      0x20\n        /* \"#utility.yul\":16701:16710   */\n      dup3\n        /* \"#utility.yul\":16697:16715   */\n      add\n        /* \"#utility.yul\":16689:16715   */\n      swap1\n      pop\n        /* \"#utility.yul\":16761:16770   */\n      dup2\n        /* \"#utility.yul\":16755:16759   */\n      dup2\n        /* \"#utility.yul\":16751:16771   */\n      sub\n        /* \"#utility.yul\":16747:16748   */\n      0x00\n        /* \"#utility.yul\":16736:16745   */\n      dup4\n        /* \"#utility.yul\":16732:16749   */\n      add\n        /* \"#utility.yul\":16725:16772   */\n      mstore\n        /* \"#utility.yul\":16789:16920   */\n      tag_337\n        /* \"#utility.yul\":16915:16919   */\n      dup2\n        /* \"#utility.yul\":16789:16920   */\n      tag_195\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":16781:16920   */\n      swap1\n      pop\n        /* \"#utility.yul\":16508:16927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a835a14047dc4797453d39ea7625f4eb8f6b3f829b30388a08db442f8cae60a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_448": {
									"entryPoint": null,
									"id": 448,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1052": {
									"entryPoint": 499,
									"id": 1052,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1042": {
									"entryPoint": 494,
									"id": 1042,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_875": {
									"entryPoint": 118,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10901:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:5",
														"type": ""
													}
												],
												"src": "580:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:5"
															},
															"nodeType": "YulIf",
															"src": "1030:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:5",
														"type": ""
													}
												],
												"src": "874:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:5",
														"type": ""
													}
												],
												"src": "1161:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:5"
															},
															"nodeType": "YulIf",
															"src": "1434:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:5",
														"type": ""
													}
												],
												"src": "1296:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:5",
																"statements": []
															},
															"src": "1701:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:5",
														"type": ""
													}
												],
												"src": "1610:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:5"
															},
															"nodeType": "YulIf",
															"src": "2117:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:5",
														"type": ""
													}
												],
												"src": "1862:434:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:5"
															},
															"nodeType": "YulIf",
															"src": "2399:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:5",
														"type": ""
													}
												],
												"src": "2316:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:5",
														"type": ""
													}
												],
												"src": "2677:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:5"
															},
															"nodeType": "YulIf",
															"src": "2813:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:5",
														"type": ""
													}
												],
												"src": "2760:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:5",
														"type": ""
													}
												],
												"src": "2888:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:878:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:32:5"
															},
															"nodeType": "YulIf",
															"src": "3178:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3307:291:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3357:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3342:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3336:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3407:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3409:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3409:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3409:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3387:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3376:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3376:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3373:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3504:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3560:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3571:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3556:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3556:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3580:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3514:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3504:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3608:292:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3623:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3647:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3643:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3637:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3627:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3709:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3711:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3711:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3689:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3678:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3675:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3806:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3862:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3858:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3858:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3882:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3816:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3806:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3910:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3925:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3929:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3955:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3965:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3955:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3122:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3133:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3145:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3153:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3161:6:5",
														"type": ""
													}
												],
												"src": "3037:1009:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4111:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4122:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4094:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4104:6:5",
														"type": ""
													}
												],
												"src": "4052:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4512:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4526:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:26:5"
															},
															"nodeType": "YulIf",
															"src": "4482:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:38:5"
															},
															"nodeType": "YulIf",
															"src": "4573:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4378:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4387:6:5",
														"type": ""
													}
												],
												"src": "4343:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4733:11:5",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4741:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4777:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4710:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4718:4:5",
														"type": ""
													}
												],
												"src": "4669:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4870:33:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:23:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:5"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4843:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4853:6:5",
														"type": ""
													}
												],
												"src": "4816:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4978:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:5"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4943:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4959:8:5",
														"type": ""
													}
												],
												"src": "4915:107:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:317:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:5",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:18:5"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:97:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:5"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:39:5"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:40:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:5"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:30:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:5"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5065:5:5",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5072:10:5",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5084:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5097:6:5",
														"type": ""
													}
												],
												"src": "5028:393:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5469:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5455:3:5",
														"type": ""
													}
												],
												"src": "5427:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5543:9:5",
														"type": ""
													}
												],
												"src": "5493:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5698:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5705:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:5"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5674:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5684:3:5",
														"type": ""
													}
												],
												"src": "5641:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:193:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:39:5"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:5"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:5"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:5"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:105:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:5"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5775:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5781:6:5",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5789:7:5",
														"type": ""
													}
												],
												"src": "5722:269:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:24:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6056:8:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6063:1:5",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:5"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6042:3:5",
														"type": ""
													}
												],
												"src": "5997:73:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:136:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:32:5"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:5"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:5"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:5"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6115:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6121:6:5",
														"type": ""
													}
												],
												"src": "6076:189:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:136:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6388:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:14:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6353:26:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6355:22:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6335:2:5",
																"statements": []
															},
															"src": "6331:120:5"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6309:5:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6316:3:5",
														"type": ""
													}
												],
												"src": "6271:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6542:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6568:431:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:5"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:5"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:5"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6869:27:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6871:23:5",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:5"
																		},
																		"nodeType": "YulIf",
																		"src": "6847:49:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:5"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:5"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:11:5"
															},
															"nodeType": "YulIf",
															"src": "6553:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6518:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6525:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6530:10:5",
														"type": ""
													}
												],
												"src": "6463:543:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7085:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:5"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7050:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7056:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7066:8:5",
														"type": ""
													}
												],
												"src": "7012:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7186:118:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:5",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:5"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:5"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:5"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:56:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:5"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:15:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:5"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7163:4:5",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7169:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7179:6:5",
														"type": ""
													}
												],
												"src": "7135:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:214:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7523:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:5"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:5"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:29:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:5",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:5"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:21:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7371:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7377:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7385:4:5",
														"type": ""
													}
												],
												"src": "7309:295:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7701:1303:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:37:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7848:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:30:5"
															},
															"nodeType": "YulIf",
															"src": "7814:56:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:5"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:38:5"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:5"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:5"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8073:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8084:17:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8097:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8148:611:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:5",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8345:163:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8422:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8463:31:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:5",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8323:21:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8325:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8304:3:5",
																					"statements": []
																				},
																				"src": "8300:208:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8544:156:5",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:5"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:5",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:5"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:5"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:5"
																				},
																				"nodeType": "YulIf",
																				"src": "8521:179:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:5",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8141:618:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8776:222:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8827:67:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8845:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:5"
																				},
																				"nodeType": "YulIf",
																				"src": "8817:77:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:5"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8768:230:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:14:5"
															},
															"nodeType": "YulSwitch",
															"src": "8111:887:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7690:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7696:3:5",
														"type": ""
													}
												],
												"src": "7609:1395:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9106:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9123:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9128:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9144:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9163:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9168:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9159:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9144:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9078:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9083:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9094:11:5",
														"type": ""
													}
												],
												"src": "9010:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9291:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9313:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9321:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9309:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9309:14:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9325:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9302:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9302:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9283:6:5",
														"type": ""
													}
												],
												"src": "9185:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9518:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9528:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9594:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9599:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9535:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9535:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9528:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9700:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "9611:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9611:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9713:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9724:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9729:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9713:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9506:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9514:3:5",
														"type": ""
													}
												],
												"src": "9372:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9915:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9925:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9937:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9948:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9933:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9933:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9925:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9972:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9983:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9968:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9968:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9991:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9987:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9987:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9961:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10017:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10151:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10025:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10017:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9895:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9910:4:5",
														"type": ""
													}
												],
												"src": "9744:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10197:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10217:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10207:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10207:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10311:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10314:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10304:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10304:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10304:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10338:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10328:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10328:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10328:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10169:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10399:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10409:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10432:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10414:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10409:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10443:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10466:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10448:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10448:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10443:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10477:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10488:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10491:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10484:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10477:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10517:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10519:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10519:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10519:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10509:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10506:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10506:10:5"
															},
															"nodeType": "YulIf",
															"src": "10503:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10386:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10389:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10395:3:5",
														"type": ""
													}
												],
												"src": "10355:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10617:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10634:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10657:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10639:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10639:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10627:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10605:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10612:3:5",
														"type": ""
													}
												],
												"src": "10552:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10774:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10784:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10796:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10792:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10792:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10784:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10864:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10877:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10888:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10873:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10873:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10820:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10746:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10758:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10769:4:5",
														"type": ""
													}
												],
												"src": "10676:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620020c4380380620020c48339818101604052810190620000379190620003c6565b8260039081620000489190620006a1565b5081600490816200005a9190620006a1565b506200006d33826200007660201b60201c565b505050620008a3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000df90620007e9565b60405180910390fd5b620000fc60008383620001ee60201b60201c565b80600260008282546200011091906200083a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016791906200083a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001ce919062000886565b60405180910390a3620001ea60008383620001f360201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002618262000216565b810181811067ffffffffffffffff8211171562000283576200028262000227565b5b80604052505050565b600062000298620001f8565b9050620002a6828262000256565b919050565b600067ffffffffffffffff821115620002c957620002c862000227565b5b620002d48262000216565b9050602081019050919050565b60005b8381101562000301578082015181840152602081019050620002e4565b60008484015250505050565b6000620003246200031e84620002ab565b6200028c565b90508281526020810184848401111562000343576200034262000211565b5b62000350848285620002e1565b509392505050565b600082601f83011262000370576200036f6200020c565b5b8151620003828482602086016200030d565b91505092915050565b6000819050919050565b620003a0816200038b565b8114620003ac57600080fd5b50565b600081519050620003c08162000395565b92915050565b600080600060608486031215620003e257620003e162000202565b5b600084015167ffffffffffffffff81111562000403576200040262000207565b5b620004118682870162000358565b935050602084015167ffffffffffffffff81111562000435576200043462000207565b5b620004438682870162000358565b92505060406200045686828701620003af565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004b357607f821691505b602082108103620004c957620004c86200046b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004f4565b6200053f8683620004f4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005826200057c62000576846200038b565b62000557565b6200038b565b9050919050565b6000819050919050565b6200059e8362000561565b620005b6620005ad8262000589565b84845462000501565b825550505050565b600090565b620005cd620005be565b620005da81848462000593565b505050565b5b818110156200060257620005f6600082620005c3565b600181019050620005e0565b5050565b601f82111562000651576200061b81620004cf565b6200062684620004e4565b8101602085101562000636578190505b6200064e6200064585620004e4565b830182620005df565b50505b505050565b600082821c905092915050565b6000620006766000198460080262000656565b1980831691505092915050565b600062000691838362000663565b9150826002028217905092915050565b620006ac8262000460565b67ffffffffffffffff811115620006c857620006c762000227565b5b620006d482546200049a565b620006e182828562000606565b600060209050601f83116001811462000719576000841562000704578287015190505b62000710858262000683565b86555062000780565b601f1984166200072986620004cf565b60005b8281101562000753578489015182556001820191506020850194506020810190506200072c565b868310156200077357848901516200076f601f89168262000663565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620007d1601f8362000788565b9150620007de8262000799565b602082019050919050565b600060208201905081810360008301526200080481620007c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000847826200038b565b915062000854836200038b565b92508282019050808211156200086f576200086e6200080b565b5b92915050565b62000880816200038b565b82525050565b60006020820190506200089d600083018462000875565b92915050565b61181180620008b36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610f2a565b60405180910390f35b6100e660048036038101906100e19190610fe5565b610308565b6040516100f39190611040565b60405180910390f35b610104610413565b604051610111919061106a565b60405180910390f35b610134600480360381019061012f9190611085565b61041d565b6040516101419190611040565b60405180910390f35b6101526104ef565b60405161015f91906110f4565b60405180910390f35b610182600480360381019061017d9190610fe5565b6104f8565b60405161018f9190611040565b60405180910390f35b6101b260048036038101906101ad919061110f565b6105c8565b6040516101bf919061106a565b60405180910390f35b6101d0610610565b6040516101dd9190610f2a565b60405180910390f35b61020060048036038101906101fb9190610fe5565b6106a2565b60405161020d9190611040565b60405180910390f35b610230600480360381019061022b9190610fe5565b610767565b60405161023d9190611040565b60405180910390f35b610260600480360381019061025b919061113c565b610935565b60405161026d919061106a565b60405180910390f35b606060038054610285906111ab565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906111ab565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561038f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103869061124e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f4906112ba565b60405180910390fd5b6104088185856109bc565b600191505092915050565b6000600254905090565b600080339050826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104719190611309565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104c6919061133d565b925050819055506104d8858285610b85565b6104e3858585610c11565b60019150509392505050565b60006012905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561054957600080fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105979190611309565b925050819055506105bd8185856105ae8589610935565b6105b8919061133d565b6109bc565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461061f906111ab565b80601f016020809104026020016040519081016040528092919081815260200182805461064b906111ab565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106f6919061133d565b9250508190555060006107098286610935565b90508381101561074e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610745906113e3565b60405180910390fd5b61075b82868684036109bc565b60019250505092915050565b6000803390503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d290611475565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111561085c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108539061124e565b60405180910390fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108aa9190611309565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108ff919061133d565b92505081905550610911818585610c11565b82600260008282546109239190611309565b92505081905550600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290611507565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9190611599565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b78919061106a565b60405180910390a3505050565b6000610b918484610935565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c0b5781811015610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490611605565b60405180910390fd5b610c0a84848484036109bc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce690611729565b60405180910390fd5b610cfa838383610e90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906117bb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e13919061133d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e77919061106a565b60405180910390a3610e8a848484610e95565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed4578082015181840152602081019050610eb9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efc82610e9a565b610f068185610ea5565b9350610f16818560208601610eb6565b610f1f81610ee0565b840191505092915050565b60006020820190508181036000830152610f448184610ef1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7c82610f51565b9050919050565b610f8c81610f71565b8114610f9757600080fd5b50565b600081359050610fa981610f83565b92915050565b6000819050919050565b610fc281610faf565b8114610fcd57600080fd5b50565b600081359050610fdf81610fb9565b92915050565b60008060408385031215610ffc57610ffb610f4c565b5b600061100a85828601610f9a565b925050602061101b85828601610fd0565b9150509250929050565b60008115159050919050565b61103a81611025565b82525050565b60006020820190506110556000830184611031565b92915050565b61106481610faf565b82525050565b600060208201905061107f600083018461105b565b92915050565b60008060006060848603121561109e5761109d610f4c565b5b60006110ac86828701610f9a565b93505060206110bd86828701610f9a565b92505060406110ce86828701610fd0565b9150509250925092565b600060ff82169050919050565b6110ee816110d8565b82525050565b600060208201905061110960008301846110e5565b92915050565b60006020828403121561112557611124610f4c565b5b600061113384828501610f9a565b91505092915050565b6000806040838503121561115357611152610f4c565b5b600061116185828601610f9a565b925050602061117285828601610f9a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111c357607f821691505b6020821081036111d6576111d561117c565b5b50919050565b7f596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e60008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611238602183610ea5565b9150611243826111dc565b604082019050919050565b600060208201905081810360008301526112678161122b565b9050919050565b7f596f752063616e6e6f7420617070726f766520796f757273656c660000000000600082015250565b60006112a4601b83610ea5565b91506112af8261126e565b602082019050919050565b600060208201905081810360008301526112d381611297565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131482610faf565b915061131f83610faf565b9250828203905081811115611337576113366112da565b5b92915050565b600061134882610faf565b915061135383610faf565b925082820190508082111561136b5761136a6112da565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113cd602583610ea5565b91506113d882611371565b604082019050919050565b600060208201905081810360008301526113fc816113c0565b9050919050565b7f596f752063616e6e6f74207472616e7366657220746f6b656e20746f20796f7560008201527f722073656c660000000000000000000000000000000000000000000000000000602082015250565b600061145f602683610ea5565b915061146a82611403565b604082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114f1602483610ea5565b91506114fc82611495565b604082019050919050565b60006020820190508181036000830152611520816114e4565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611583602283610ea5565b915061158e82611527565b604082019050919050565b600060208201905081810360008301526115b281611576565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006115ef601d83610ea5565b91506115fa826115b9565b602082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611681602583610ea5565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611713602383610ea5565b915061171e826116b7565b604082019050919050565b6000602082019050818103600083015261174281611706565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006117a5602683610ea5565b91506117b082611749565b604082019050919050565b600060208201905081810360008301526117d481611798565b905091905056fea26469706673582212201a835a14047dc4797453d39ea7625f4eb8f6b3f829b30388a08db442f8cae60a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x20C4 CODESIZE SUB DUP1 PUSH3 0x20C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3C6 JUMP JUMPDEST DUP3 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x6A1 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x6A1 JUMP JUMPDEST POP PUSH3 0x6D CALLER DUP3 PUSH3 0x76 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x8A3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDF SWAP1 PUSH3 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xFC PUSH1 0x0 DUP4 DUP4 PUSH3 0x1EE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x110 SWAP2 SWAP1 PUSH3 0x83A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x167 SWAP2 SWAP1 PUSH3 0x83A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1CE SWAP2 SWAP1 PUSH3 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1EA PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x261 DUP3 PUSH3 0x216 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x227 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x298 PUSH3 0x1F8 JUMP JUMPDEST SWAP1 POP PUSH3 0x2A6 DUP3 DUP3 PUSH3 0x256 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C8 PUSH3 0x227 JUMP JUMPDEST JUMPDEST PUSH3 0x2D4 DUP3 PUSH3 0x216 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x301 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2E4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x324 PUSH3 0x31E DUP5 PUSH3 0x2AB JUMP JUMPDEST PUSH3 0x28C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x343 JUMPI PUSH3 0x342 PUSH3 0x211 JUMP JUMPDEST JUMPDEST PUSH3 0x350 DUP5 DUP3 DUP6 PUSH3 0x2E1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x370 JUMPI PUSH3 0x36F PUSH3 0x20C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x382 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x30D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A0 DUP2 PUSH3 0x38B JUMP JUMPDEST DUP2 EQ PUSH3 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C0 DUP2 PUSH3 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3E2 JUMPI PUSH3 0x3E1 PUSH3 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x403 JUMPI PUSH3 0x402 PUSH3 0x207 JUMP JUMPDEST JUMPDEST PUSH3 0x411 DUP7 DUP3 DUP8 ADD PUSH3 0x358 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x435 JUMPI PUSH3 0x434 PUSH3 0x207 JUMP JUMPDEST JUMPDEST PUSH3 0x443 DUP7 DUP3 DUP8 ADD PUSH3 0x358 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x456 DUP7 DUP3 DUP8 ADD PUSH3 0x3AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4C9 JUMPI PUSH3 0x4C8 PUSH3 0x46B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x533 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4F4 JUMP JUMPDEST PUSH3 0x53F DUP7 DUP4 PUSH3 0x4F4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x582 PUSH3 0x57C PUSH3 0x576 DUP5 PUSH3 0x38B JUMP JUMPDEST PUSH3 0x557 JUMP JUMPDEST PUSH3 0x38B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x59E DUP4 PUSH3 0x561 JUMP JUMPDEST PUSH3 0x5B6 PUSH3 0x5AD DUP3 PUSH3 0x589 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x501 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5CD PUSH3 0x5BE JUMP JUMPDEST PUSH3 0x5DA DUP2 DUP5 DUP5 PUSH3 0x593 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x602 JUMPI PUSH3 0x5F6 PUSH1 0x0 DUP3 PUSH3 0x5C3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x651 JUMPI PUSH3 0x61B DUP2 PUSH3 0x4CF JUMP JUMPDEST PUSH3 0x626 DUP5 PUSH3 0x4E4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x636 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x64E PUSH3 0x645 DUP6 PUSH3 0x4E4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x676 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x656 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x691 DUP4 DUP4 PUSH3 0x663 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6AC DUP3 PUSH3 0x460 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6C8 JUMPI PUSH3 0x6C7 PUSH3 0x227 JUMP JUMPDEST JUMPDEST PUSH3 0x6D4 DUP3 SLOAD PUSH3 0x49A JUMP JUMPDEST PUSH3 0x6E1 DUP3 DUP3 DUP6 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x719 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x704 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x710 DUP6 DUP3 PUSH3 0x683 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x780 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x729 DUP7 PUSH3 0x4CF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x72C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x773 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x76F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x663 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D1 PUSH1 0x1F DUP4 PUSH3 0x788 JUMP JUMPDEST SWAP2 POP PUSH3 0x7DE DUP3 PUSH3 0x799 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x804 DUP2 PUSH3 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x847 DUP3 PUSH3 0x38B JUMP JUMPDEST SWAP2 POP PUSH3 0x854 DUP4 PUSH3 0x38B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x86F JUMPI PUSH3 0x86E PUSH3 0x80B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x880 DUP2 PUSH3 0x38B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x89D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1811 DUP1 PUSH3 0x8B3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x386 SWAP1 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x408 DUP2 DUP6 DUP6 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4D8 DUP6 DUP3 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x4E3 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5BD DUP2 DUP6 DUP6 PUSH2 0x5AE DUP6 DUP10 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x61F SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64B SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x698 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x698 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x709 DUP3 DUP7 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x911 DUP2 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 DUP5 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC0B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x9BC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE6 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFA DUP4 DUP4 DUP4 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8A DUP5 DUP5 DUP5 PUSH2 0xE95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFC DUP3 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0xF06 DUP2 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP4 POP PUSH2 0xF16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xEE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7C DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF71 JUMP JUMPDEST DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA9 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP2 EQ PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101B DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0x1025 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1055 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1064 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP7 DUP3 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BD DUP7 DUP3 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CE DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1133 DUP5 DUP3 DUP6 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1172 DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x117C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1238 PUSH1 0x21 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1243 DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F7420617070726F766520796F757273656C660000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A4 PUSH1 0x1B DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AF DUP3 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D3 DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1314 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x131F DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x12DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1353 DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x12DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CD PUSH1 0x25 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D8 DUP3 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FC DUP2 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74207472616E7366657220746F6B656E20746F20796F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722073656C660000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145F PUSH1 0x26 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x146A DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148E DUP2 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F1 PUSH1 0x24 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1520 DUP2 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH1 0x22 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x158E DUP3 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B2 DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH1 0x1D DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FA DUP3 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH1 0x25 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x168C DUP3 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1713 PUSH1 0x23 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x171E DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1742 DUP2 PUSH2 0x1706 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A5 PUSH1 0x26 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B0 DUP3 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D4 DUP2 PUSH2 0x1798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP4 GAS EQ DIV PUSH30 0xC4797453D39EA7625F4EB8F6B3F829B30388A08DB442F8CAE60A64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "205:6684:2:-:0;;;537:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;659:5;651;:13;;;;;;:::i;:::-;;684:7;674;:17;;;;;;:::i;:::-;;701:32;707:10;719:13;701:5;;;:32;;:::i;:::-;537:203;;;205:6684;;4605:389;4707:1;4688:21;;:7;:21;;;4680:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4756:49;4785:1;4789:7;4798:6;4756:20;;;:49;;:::i;:::-;4832:6;4816:12;;:22;;;;;;;:::i;:::-;;;;;;;;4870:6;4848:9;:18;4858:7;4848:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;4912:7;4891:37;;4908:1;4891:37;;;4921:6;4891:37;;;;;;:::i;:::-;;;;;;;;4939:48;4967:1;4971:7;4980:6;4939:19;;;:48;;:::i;:::-;4605:389;;:::o;6611:121::-;;;;:::o;6767:120::-;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3357:1;3346:9;3342:17;3336:24;3387:18;3379:6;3376:30;3373:117;;;3409:79;;:::i;:::-;3373:117;3514:74;3580:7;3571:6;3560:9;3556:22;3514:74;:::i;:::-;3504:84;;3307:291;3658:2;3647:9;3643:18;3637:25;3689:18;3681:6;3678:30;3675:117;;;3711:79;;:::i;:::-;3675:117;3816:74;3882:7;3873:6;3862:9;3858:22;3816:74;:::i;:::-;3806:84;;3608:292;3939:2;3965:64;4021:7;4012:6;4001:9;3997:22;3965:64;:::i;:::-;3955:74;;3910:129;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:169::-;9094:11;9128:6;9123:3;9116:19;9168:4;9163:3;9159:14;9144:29;;9010:169;;;;:::o;9185:181::-;9325:33;9321:1;9313:6;9309:14;9302:57;9185:181;:::o;9372:366::-;9514:3;9535:67;9599:2;9594:3;9535:67;:::i;:::-;9528:74;;9611:93;9700:3;9611:93;:::i;:::-;9729:2;9724:3;9720:12;9713:19;;9372:366;;;:::o;9744:419::-;9910:4;9948:2;9937:9;9933:18;9925:26;;9997:9;9991:4;9987:20;9983:1;9972:9;9968:17;9961:47;10025:131;10151:4;10025:131;:::i;:::-;10017:139;;9744:419;;;:::o;10169:180::-;10217:77;10214:1;10207:88;10314:4;10311:1;10304:15;10338:4;10335:1;10328:15;10355:191;10395:3;10414:20;10432:1;10414:20;:::i;:::-;10409:25;;10448:20;10466:1;10448:20;:::i;:::-;10443:25;;10491:1;10488;10484:9;10477:16;;10512:3;10509:1;10506:10;10503:36;;;10519:18;;:::i;:::-;10503:36;10355:191;;;;:::o;10552:118::-;10639:24;10657:5;10639:24;:::i;:::-;10634:3;10627:37;10552:118;;:::o;10676:222::-;10769:4;10807:2;10796:9;10792:18;10784:26;;10820:71;10888:1;10877:9;10873:17;10864:6;10820:71;:::i;:::-;10676:222;;;;:::o;205:6684:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1052": {
									"entryPoint": 3733,
									"id": 1052,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_990": {
									"entryPoint": 2492,
									"id": 990,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1042": {
									"entryPoint": 3728,
									"id": 1042,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_spendAllowance_1032": {
									"entryPoint": 2949,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_820": {
									"entryPoint": 3089,
									"id": 820,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_571": {
									"entryPoint": 2357,
									"id": 571,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_612": {
									"entryPoint": 776,
									"id": 612,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_497": {
									"entryPoint": 1480,
									"id": 497,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_475": {
									"entryPoint": 1263,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_744": {
									"entryPoint": 1698,
									"id": 744,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_698": {
									"entryPoint": 1272,
									"id": 698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_457": {
									"entryPoint": 630,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_466": {
									"entryPoint": 1552,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_484": {
									"entryPoint": 1043,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_656": {
									"entryPoint": 1053,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_554": {
									"entryPoint": 1895,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16930:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:5",
																"statements": []
															},
															"src": "378:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:5",
														"type": ""
													}
												],
												"src": "287:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:5",
														"type": ""
													}
												],
												"src": "539:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:5",
														"type": ""
													}
												],
												"src": "647:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:5",
														"type": ""
													}
												],
												"src": "1030:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:5",
														"type": ""
													}
												],
												"src": "1349:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:5",
														"type": ""
													}
												],
												"src": "1676:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:5",
														"type": ""
													}
												],
												"src": "1808:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:5"
															},
															"nodeType": "YulIf",
															"src": "1963:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:5",
														"type": ""
													}
												],
												"src": "1910:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:5",
														"type": ""
													}
												],
												"src": "2038:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:5",
														"type": ""
													}
												],
												"src": "2183:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:5"
															},
															"nodeType": "YulIf",
															"src": "2319:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:5",
														"type": ""
													}
												],
												"src": "2266:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:5",
														"type": ""
													}
												],
												"src": "2394:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:5"
															},
															"nodeType": "YulIf",
															"src": "2632:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:5",
														"type": ""
													}
												],
												"src": "2539:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:5",
														"type": ""
													}
												],
												"src": "3019:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:5",
														"type": ""
													}
												],
												"src": "3115:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:5",
														"type": ""
													}
												],
												"src": "3230:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:5",
														"type": ""
													}
												],
												"src": "3446:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:5",
														"type": ""
													}
												],
												"src": "3570:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:5"
															},
															"nodeType": "YulIf",
															"src": "3908:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:5",
														"type": ""
													}
												],
												"src": "3798:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:5",
														"type": ""
													}
												],
												"src": "4423:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:5",
														"type": ""
													}
												],
												"src": "4515:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:5",
														"type": ""
													}
												],
												"src": "4633:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:5"
															},
															"nodeType": "YulIf",
															"src": "4929:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:5",
														"type": ""
													}
												],
												"src": "4853:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:5"
															},
															"nodeType": "YulIf",
															"src": "5281:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:5",
														"type": ""
													}
												],
												"src": "5188:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:5"
															},
															"nodeType": "YulIf",
															"src": "5993:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:5"
															},
															"nodeType": "YulIf",
															"src": "6084:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:5",
														"type": ""
													}
												],
												"src": "5854:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6286:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6308:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6316:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6304:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6304:14:5"
																	},
																	{
																		"hexValue": "596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6320:34:5",
																		"type": "",
																		"value": "You do not have sufficient token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6297:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6376:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:15:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6389:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6365:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6278:6:5",
														"type": ""
													}
												],
												"src": "6180:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6552:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6562:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6628:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6569:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6562:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6734:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
																	"nodeType": "YulIdentifier",
																	"src": "6645:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6645:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6747:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6758:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6763:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6754:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6548:3:5",
														"type": ""
													}
												],
												"src": "6406:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6949:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6959:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6971:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6982:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6967:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6959:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7006:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7017:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7002:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7002:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7025:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7031:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6995:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6995:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7051:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7185:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7059:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7059:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7051:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6929:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6944:4:5",
														"type": ""
													}
												],
												"src": "6778:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7309:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7331:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7339:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7327:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7327:14:5"
																	},
																	{
																		"hexValue": "596f752063616e6e6f7420617070726f766520796f757273656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7343:29:5",
																		"type": "",
																		"value": "You cannot approve yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7320:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7320:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7301:6:5",
														"type": ""
													}
												],
												"src": "7203:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7532:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7608:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7613:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7714:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6",
																	"nodeType": "YulIdentifier",
																	"src": "7625:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7625:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7727:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7738:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7734:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7727:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7520:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7528:3:5",
														"type": ""
													}
												],
												"src": "7386:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7929:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7939:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7951:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7962:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7947:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7939:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7986:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7997:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7982:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7982:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8005:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8001:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8001:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7975:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8031:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8165:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8039:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8031:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7909:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7924:4:5",
														"type": ""
													}
												],
												"src": "7758:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8211:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8228:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8325:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8318:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8349:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8342:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8183:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8414:149:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8424:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8447:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8429:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8429:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8424:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8458:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8481:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8463:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8458:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8492:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8504:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8507:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8500:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8500:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8492:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8534:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8536:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8536:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8536:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8531:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8522:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:11:5"
															},
															"nodeType": "YulIf",
															"src": "8519:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8400:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8403:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8409:4:5",
														"type": ""
													}
												],
												"src": "8369:194:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8613:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8623:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8646:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8628:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8623:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8657:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8680:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8662:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8657:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8691:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8702:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8705:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8698:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8691:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8733:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8733:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8733:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8723:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8726:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8720:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8720:10:5"
															},
															"nodeType": "YulIf",
															"src": "8717:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8600:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8603:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8609:3:5",
														"type": ""
													}
												],
												"src": "8569:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8872:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8894:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8902:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8890:14:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8906:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8883:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8883:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8962:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8970:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8958:15:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8975:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8951:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8951:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8864:6:5",
														"type": ""
													}
												],
												"src": "8766:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9142:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9152:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9218:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9223:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9159:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9152:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9324:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "9235:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9235:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9337:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9348:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9353:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9344:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9337:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9130:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9138:3:5",
														"type": ""
													}
												],
												"src": "8996:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9539:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9549:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9561:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9557:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9549:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9596:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9607:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9592:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9592:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9615:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9621:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9611:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9585:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9585:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9585:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9641:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9775:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9649:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9649:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9641:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9519:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9534:4:5",
														"type": ""
													}
												],
												"src": "9368:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9921:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9929:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9917:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9917:14:5"
																	},
																	{
																		"hexValue": "596f752063616e6e6f74207472616e7366657220746f6b656e20746f20796f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9933:34:5",
																		"type": "",
																		"value": "You cannot transfer token to you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9910:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9910:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9989:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9997:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9985:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:15:5"
																	},
																	{
																		"hexValue": "722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10002:8:5",
																		"type": "",
																		"value": "r self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9978:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9891:6:5",
														"type": ""
													}
												],
												"src": "9793:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10170:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10180:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10246:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10251:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10187:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10187:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10180:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10352:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9",
																	"nodeType": "YulIdentifier",
																	"src": "10263:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10263:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10365:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10376:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10372:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10365:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10158:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10166:3:5",
														"type": ""
													}
												],
												"src": "10024:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10567:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10577:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10589:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10600:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10585:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10585:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10577:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10624:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10635:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10620:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10620:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10643:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10639:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10639:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10613:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10613:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10669:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10803:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10677:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10669:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10547:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10562:4:5",
														"type": ""
													}
												],
												"src": "10396:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10927:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10949:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10957:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10945:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10961:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10938:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11017:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11025:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11013:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11030:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11006:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11006:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11006:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10919:6:5",
														"type": ""
													}
												],
												"src": "10821:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11272:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11277:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11213:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11213:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11206:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11378:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "11289:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11289:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11391:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11402:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11407:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11398:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11391:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11184:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11192:3:5",
														"type": ""
													}
												],
												"src": "11050:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11593:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11603:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11615:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11626:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11611:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11611:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11603:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11650:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11661:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11646:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11646:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11669:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11675:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11665:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11665:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11639:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11639:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11639:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11695:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11703:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11703:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11695:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11573:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11588:4:5",
														"type": ""
													}
												],
												"src": "11422:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11953:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11975:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11983:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11971:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11987:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11964:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11964:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12043:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12051:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12039:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12056:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12032:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12032:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12032:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11945:6:5",
														"type": ""
													}
												],
												"src": "11847:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12220:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12230:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12296:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12301:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12237:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12230:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12402:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "12313:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12313:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12313:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12415:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12426:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12431:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12422:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12422:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12415:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12208:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12216:3:5",
														"type": ""
													}
												],
												"src": "12074:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12617:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12627:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12639:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12650:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12635:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12635:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12627:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12674:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12685:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12670:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12670:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12693:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12699:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12689:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12663:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12663:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12663:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12719:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12853:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12727:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12727:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12719:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12597:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12612:4:5",
														"type": ""
													}
												],
												"src": "12446:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12977:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12999:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13007:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12995:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12995:14:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13011:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12988:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12988:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12988:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12969:6:5",
														"type": ""
													}
												],
												"src": "12871:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13202:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13212:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13278:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13283:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13219:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13219:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13212:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13384:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "13295:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13295:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13295:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13397:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13408:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13413:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13404:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13397:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13198:3:5",
														"type": ""
													}
												],
												"src": "13056:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13599:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13609:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13632:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13656:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13667:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13652:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13675:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13681:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13645:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13701:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13835:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13709:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13701:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13579:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13594:4:5",
														"type": ""
													}
												],
												"src": "13428:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13959:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13981:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13989:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13977:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13977:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13993:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13970:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13970:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13970:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14049:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14057:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14045:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14045:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14062:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14038:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14038:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14038:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13951:6:5",
														"type": ""
													}
												],
												"src": "13853:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14229:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14239:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14305:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14310:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14246:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14246:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14239:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14411:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "14322:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14322:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14322:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14424:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14435:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14431:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14424:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14217:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14225:3:5",
														"type": ""
													}
												],
												"src": "14083:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14636:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14648:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14644:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14636:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14683:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14694:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14679:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14702:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14708:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14672:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14672:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14672:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14728:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14862:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14736:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14736:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14606:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14621:4:5",
														"type": ""
													}
												],
												"src": "14455:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14986:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15008:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15016:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15004:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15004:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15020:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14997:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14997:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14997:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15076:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15084:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15072:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15072:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15089:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15065:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15065:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14978:6:5",
														"type": ""
													}
												],
												"src": "14880:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15254:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15264:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15330:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15271:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15271:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15264:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15436:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "15347:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15347:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15347:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15449:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15460:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15465:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15449:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15242:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15250:3:5",
														"type": ""
													}
												],
												"src": "15108:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15651:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15661:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15673:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15684:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15669:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15669:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15661:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15708:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15719:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15704:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15727:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15733:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15723:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15723:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15697:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15697:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15753:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15887:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15761:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15761:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15753:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15631:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15646:4:5",
														"type": ""
													}
												],
												"src": "15480:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16011:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16033:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16041:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16029:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16029:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16045:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16022:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16022:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16101:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16109:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16097:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16097:15:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16114:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16090:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16090:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16090:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16003:6:5",
														"type": ""
													}
												],
												"src": "15905:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16282:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16292:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16358:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16363:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16299:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16292:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16464:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "16375:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16375:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16375:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16477:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16488:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16493:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16484:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16477:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16270:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16278:3:5",
														"type": ""
													}
												],
												"src": "16136:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16679:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16689:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16701:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16697:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16697:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16689:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16736:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16747:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16732:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16755:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16761:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16751:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16725:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16725:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16725:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16781:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16915:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16789:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16789:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16781:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16659:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16674:4:5",
														"type": ""
													}
												],
												"src": "16508:419:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have sufficient token\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot approve yourself\")\n\n    }\n\n    function abi_encode_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot transfer token to you\")\n\n        mstore(add(memPtr, 32), \"r self\")\n\n    }\n\n    function abi_encode_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610f2a565b60405180910390f35b6100e660048036038101906100e19190610fe5565b610308565b6040516100f39190611040565b60405180910390f35b610104610413565b604051610111919061106a565b60405180910390f35b610134600480360381019061012f9190611085565b61041d565b6040516101419190611040565b60405180910390f35b6101526104ef565b60405161015f91906110f4565b60405180910390f35b610182600480360381019061017d9190610fe5565b6104f8565b60405161018f9190611040565b60405180910390f35b6101b260048036038101906101ad919061110f565b6105c8565b6040516101bf919061106a565b60405180910390f35b6101d0610610565b6040516101dd9190610f2a565b60405180910390f35b61020060048036038101906101fb9190610fe5565b6106a2565b60405161020d9190611040565b60405180910390f35b610230600480360381019061022b9190610fe5565b610767565b60405161023d9190611040565b60405180910390f35b610260600480360381019061025b919061113c565b610935565b60405161026d919061106a565b60405180910390f35b606060038054610285906111ab565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906111ab565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561038f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103869061124e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f4906112ba565b60405180910390fd5b6104088185856109bc565b600191505092915050565b6000600254905090565b600080339050826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104719190611309565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104c6919061133d565b925050819055506104d8858285610b85565b6104e3858585610c11565b60019150509392505050565b60006012905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561054957600080fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105979190611309565b925050819055506105bd8185856105ae8589610935565b6105b8919061133d565b6109bc565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461061f906111ab565b80601f016020809104026020016040519081016040528092919081815260200182805461064b906111ab565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050905090565b600080339050826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106f6919061133d565b9250508190555060006107098286610935565b90508381101561074e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610745906113e3565b60405180910390fd5b61075b82868684036109bc565b60019250505092915050565b6000803390503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d290611475565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111561085c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108539061124e565b60405180910390fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108aa9190611309565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108ff919061133d565b92505081905550610911818585610c11565b82600260008282546109239190611309565b92505081905550600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290611507565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9190611599565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b78919061106a565b60405180910390a3505050565b6000610b918484610935565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c0b5781811015610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490611605565b60405180910390fd5b610c0a84848484036109bc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce690611729565b60405180910390fd5b610cfa838383610e90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906117bb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e13919061133d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e77919061106a565b60405180910390a3610e8a848484610e95565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed4578082015181840152602081019050610eb9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efc82610e9a565b610f068185610ea5565b9350610f16818560208601610eb6565b610f1f81610ee0565b840191505092915050565b60006020820190508181036000830152610f448184610ef1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7c82610f51565b9050919050565b610f8c81610f71565b8114610f9757600080fd5b50565b600081359050610fa981610f83565b92915050565b6000819050919050565b610fc281610faf565b8114610fcd57600080fd5b50565b600081359050610fdf81610fb9565b92915050565b60008060408385031215610ffc57610ffb610f4c565b5b600061100a85828601610f9a565b925050602061101b85828601610fd0565b9150509250929050565b60008115159050919050565b61103a81611025565b82525050565b60006020820190506110556000830184611031565b92915050565b61106481610faf565b82525050565b600060208201905061107f600083018461105b565b92915050565b60008060006060848603121561109e5761109d610f4c565b5b60006110ac86828701610f9a565b93505060206110bd86828701610f9a565b92505060406110ce86828701610fd0565b9150509250925092565b600060ff82169050919050565b6110ee816110d8565b82525050565b600060208201905061110960008301846110e5565b92915050565b60006020828403121561112557611124610f4c565b5b600061113384828501610f9a565b91505092915050565b6000806040838503121561115357611152610f4c565b5b600061116185828601610f9a565b925050602061117285828601610f9a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111c357607f821691505b6020821081036111d6576111d561117c565b5b50919050565b7f596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e60008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611238602183610ea5565b9150611243826111dc565b604082019050919050565b600060208201905081810360008301526112678161122b565b9050919050565b7f596f752063616e6e6f7420617070726f766520796f757273656c660000000000600082015250565b60006112a4601b83610ea5565b91506112af8261126e565b602082019050919050565b600060208201905081810360008301526112d381611297565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131482610faf565b915061131f83610faf565b9250828203905081811115611337576113366112da565b5b92915050565b600061134882610faf565b915061135383610faf565b925082820190508082111561136b5761136a6112da565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113cd602583610ea5565b91506113d882611371565b604082019050919050565b600060208201905081810360008301526113fc816113c0565b9050919050565b7f596f752063616e6e6f74207472616e7366657220746f6b656e20746f20796f7560008201527f722073656c660000000000000000000000000000000000000000000000000000602082015250565b600061145f602683610ea5565b915061146a82611403565b604082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114f1602483610ea5565b91506114fc82611495565b604082019050919050565b60006020820190508181036000830152611520816114e4565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611583602283610ea5565b915061158e82611527565b604082019050919050565b600060208201905081810360008301526115b281611576565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006115ef601d83610ea5565b91506115fa826115b9565b602082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611681602583610ea5565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611713602383610ea5565b915061171e826116b7565b604082019050919050565b6000602082019050818103600083015261174281611706565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006117a5602683610ea5565b91506117b082611749565b604082019050919050565b600060208201905081810360008301526117d481611798565b905091905056fea26469706673582212201a835a14047dc4797453d39ea7625f4eb8f6b3f829b30388a08db442f8cae60a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x386 SWAP1 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x408 DUP2 DUP6 DUP6 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4D8 DUP6 DUP3 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x4E3 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5BD DUP2 DUP6 DUP6 PUSH2 0x5AE DUP6 DUP10 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x61F SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64B SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x698 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x698 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x709 DUP3 DUP7 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x911 DUP2 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 DUP5 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC0B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x9BC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE6 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFA DUP4 DUP4 DUP4 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8A DUP5 DUP5 DUP5 PUSH2 0xE95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFC DUP3 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0xF06 DUP2 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP4 POP PUSH2 0xF16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xEE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7C DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF71 JUMP JUMPDEST DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA9 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP2 EQ PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101B DUP6 DUP3 DUP7 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0x1025 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1055 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1064 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP7 DUP3 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BD DUP7 DUP3 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CE DUP7 DUP3 DUP8 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1133 DUP5 DUP3 DUP6 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0xF4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1172 DUP6 DUP3 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x117C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1238 PUSH1 0x21 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1243 DUP3 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F7420617070726F766520796F757273656C660000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A4 PUSH1 0x1B DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AF DUP3 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D3 DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1314 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x131F DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x12DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1353 DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x12DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CD PUSH1 0x25 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D8 DUP3 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FC DUP2 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74207472616E7366657220746F6B656E20746F20796F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722073656C660000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145F PUSH1 0x26 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x146A DUP3 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148E DUP2 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F1 PUSH1 0x24 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1520 DUP2 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH1 0x22 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x158E DUP3 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B2 DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH1 0x1D DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15FA DUP3 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161E DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1681 PUSH1 0x25 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x168C DUP3 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B0 DUP2 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1713 PUSH1 0x23 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x171E DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1742 DUP2 PUSH2 0x1706 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A5 PUSH1 0x26 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B0 DUP3 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D4 DUP2 PUSH2 0x1798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP4 GAS EQ DIV PUSH30 0xC4797453D39EA7625F4EB8F6B3F829B30388A08DB442F8CAE60A64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "205:6684:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2166:357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1135:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1013:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2982:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1285:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;884:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3368:470;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1440:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1966:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;763:98;817:13;849:5;842:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:98;:::o;2166:357::-;2249:4;2265:13;2281:10;2265:26;;2329:6;2309:9;:16;2319:5;2309:16;;;;;;;;;;;;;;;;:26;;2301:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2402:10;2391:21;;:7;:21;;;2383:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2463:32;2472:5;2479:7;2488:6;2463:8;:32::i;:::-;2512:4;2505:11;;;2166:357;;;;:::o;1135:106::-;1196:7;1222:12;;1215:19;;1135:106;:::o;2565:352::-;2692:4;2708:15;2726:10;2708:28;;2765:6;2746:9;:15;2756:4;2746:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;2798:6;2781:9;:13;2791:2;2781:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;2814:38;2830:4;2836:7;2845:6;2814:15;:38::i;:::-;2862:27;2872:4;2878:2;2882:6;2862:9;:27::i;:::-;2906:4;2899:11;;;2565:352;;;;;:::o;1013:91::-;1071:5;1095:2;1088:9;;1013:91;:::o;2982:321::-;3070:4;3086:13;3102:10;3086:26;;3150:10;3130:9;:16;3140:5;3130:16;;;;;;;;;;;;;;;;:30;;3122:39;;;;;;3191:10;3171:9;:16;3181:5;3171:16;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3211:64;3220:5;3227:7;3264:10;3236:25;3246:5;3253:7;3236:9;:25::i;:::-;:38;;;;:::i;:::-;3211:8;:64::i;:::-;3292:4;3285:11;;;2982:321;;;;:::o;1285:125::-;1359:7;1385:9;:18;1395:7;1385:18;;;;;;;;;;;;;;;;1378:25;;1285:125;;;:::o;884:102::-;940:13;972:7;965:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:102;:::o;3368:470::-;3461:4;3477:13;3493:10;3477:26;;3533:15;3513:9;:16;3523:5;3513:16;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3558:24;3585:25;3595:5;3602:7;3585:9;:25::i;:::-;3558:52;;3648:15;3628:16;:35;;3620:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3739:60;3748:5;3755:7;3783:15;3764:16;:34;3739:8;:60::i;:::-;3827:4;3820:11;;;;3368:470;;;;:::o;1440:447::-;1519:4;1535:13;1551:10;1535:26;;1585:10;1579:16;;:2;:16;;;1571:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1666:9;:16;1676:5;1666:16;;;;;;;;;;;;;;;;1656:6;:26;;1648:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1750:6;1730:9;:16;1740:5;1730:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1783:6;1766:9;:13;1776:2;1766:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1799:28;1809:5;1816:2;1820:6;1799:9;:28::i;:::-;1853:6;1837:12;;:22;;;;;;;:::i;:::-;;;;;;;;1876:4;1869:11;;;1440:447;;;;:::o;1966:149::-;2055:7;2081:11;:18;2093:5;2081:18;;;;;;;;;;;;;;;:27;2100:7;2081:27;;;;;;;;;;;;;;;;2074:34;;1966:149;;;;:::o;5697:370::-;5845:1;5828:19;;:5;:19;;;5820:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5925:1;5906:21;;:7;:21;;;5898:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6007:6;5977:11;:18;5989:5;5977:18;;;;;;;;;;;;;;;:27;5996:7;5977:27;;;;;;;;;;;;;;;:36;;;;6044:7;6028:32;;6037:5;6028:32;;;6053:6;6028:32;;;;;;:::i;:::-;;;;;;;;5697:370;;;:::o;6134:441::-;6264:24;6291:25;6301:5;6308:7;6291:9;:25::i;:::-;6264:52;;6350:17;6330:16;:37;6326:243;;6411:6;6391:16;:26;;6383:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6493:51;6502:5;6509:7;6537:6;6518:16;:25;6493:8;:51::i;:::-;6326:243;6254:321;6134:441;;;:::o;3889:651::-;4031:1;4015:18;;:4;:18;;;4007:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4107:1;4093:16;;:2;:16;;;4085:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4160:38;4181:4;4187:2;4191:6;4160:20;:38::i;:::-;4209:19;4231:9;:15;4241:4;4231:15;;;;;;;;;;;;;;;;4209:37;;4279:6;4264:11;:21;;4256:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4394:6;4380:11;:20;4362:9;:15;4372:4;4362:15;;;;;;;;;;;;;;;:38;;;;4437:6;4420:9;:13;4430:2;4420:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;4474:2;4459:26;;4468:4;4459:26;;;4478:6;4459:26;;;;;;:::i;:::-;;;;;;;;4496:37;4516:4;4522:2;4526:6;4496:19;:37::i;:::-;3997:543;3889:651;;;:::o;6611:121::-;;;;:::o;6767:120::-;;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:220::-;6320:34;6316:1;6308:6;6304:14;6297:58;6389:3;6384:2;6376:6;6372:15;6365:28;6180:220;:::o;6406:366::-;6548:3;6569:67;6633:2;6628:3;6569:67;:::i;:::-;6562:74;;6645:93;6734:3;6645:93;:::i;:::-;6763:2;6758:3;6754:12;6747:19;;6406:366;;;:::o;6778:419::-;6944:4;6982:2;6971:9;6967:18;6959:26;;7031:9;7025:4;7021:20;7017:1;7006:9;7002:17;6995:47;7059:131;7185:4;7059:131;:::i;:::-;7051:139;;6778:419;;;:::o;7203:177::-;7343:29;7339:1;7331:6;7327:14;7320:53;7203:177;:::o;7386:366::-;7528:3;7549:67;7613:2;7608:3;7549:67;:::i;:::-;7542:74;;7625:93;7714:3;7625:93;:::i;:::-;7743:2;7738:3;7734:12;7727:19;;7386:366;;;:::o;7758:419::-;7924:4;7962:2;7951:9;7947:18;7939:26;;8011:9;8005:4;8001:20;7997:1;7986:9;7982:17;7975:47;8039:131;8165:4;8039:131;:::i;:::-;8031:139;;7758:419;;;:::o;8183:180::-;8231:77;8228:1;8221:88;8328:4;8325:1;8318:15;8352:4;8349:1;8342:15;8369:194;8409:4;8429:20;8447:1;8429:20;:::i;:::-;8424:25;;8463:20;8481:1;8463:20;:::i;:::-;8458:25;;8507:1;8504;8500:9;8492:17;;8531:1;8525:4;8522:11;8519:37;;;8536:18;;:::i;:::-;8519:37;8369:194;;;;:::o;8569:191::-;8609:3;8628:20;8646:1;8628:20;:::i;:::-;8623:25;;8662:20;8680:1;8662:20;:::i;:::-;8657:25;;8705:1;8702;8698:9;8691:16;;8726:3;8723:1;8720:10;8717:36;;;8733:18;;:::i;:::-;8717:36;8569:191;;;;:::o;8766:224::-;8906:34;8902:1;8894:6;8890:14;8883:58;8975:7;8970:2;8962:6;8958:15;8951:32;8766:224;:::o;8996:366::-;9138:3;9159:67;9223:2;9218:3;9159:67;:::i;:::-;9152:74;;9235:93;9324:3;9235:93;:::i;:::-;9353:2;9348:3;9344:12;9337:19;;8996:366;;;:::o;9368:419::-;9534:4;9572:2;9561:9;9557:18;9549:26;;9621:9;9615:4;9611:20;9607:1;9596:9;9592:17;9585:47;9649:131;9775:4;9649:131;:::i;:::-;9641:139;;9368:419;;;:::o;9793:225::-;9933:34;9929:1;9921:6;9917:14;9910:58;10002:8;9997:2;9989:6;9985:15;9978:33;9793:225;:::o;10024:366::-;10166:3;10187:67;10251:2;10246:3;10187:67;:::i;:::-;10180:74;;10263:93;10352:3;10263:93;:::i;:::-;10381:2;10376:3;10372:12;10365:19;;10024:366;;;:::o;10396:419::-;10562:4;10600:2;10589:9;10585:18;10577:26;;10649:9;10643:4;10639:20;10635:1;10624:9;10620:17;10613:47;10677:131;10803:4;10677:131;:::i;:::-;10669:139;;10396:419;;;:::o;10821:223::-;10961:34;10957:1;10949:6;10945:14;10938:58;11030:6;11025:2;11017:6;11013:15;11006:31;10821:223;:::o;11050:366::-;11192:3;11213:67;11277:2;11272:3;11213:67;:::i;:::-;11206:74;;11289:93;11378:3;11289:93;:::i;:::-;11407:2;11402:3;11398:12;11391:19;;11050:366;;;:::o;11422:419::-;11588:4;11626:2;11615:9;11611:18;11603:26;;11675:9;11669:4;11665:20;11661:1;11650:9;11646:17;11639:47;11703:131;11829:4;11703:131;:::i;:::-;11695:139;;11422:419;;;:::o;11847:221::-;11987:34;11983:1;11975:6;11971:14;11964:58;12056:4;12051:2;12043:6;12039:15;12032:29;11847:221;:::o;12074:366::-;12216:3;12237:67;12301:2;12296:3;12237:67;:::i;:::-;12230:74;;12313:93;12402:3;12313:93;:::i;:::-;12431:2;12426:3;12422:12;12415:19;;12074:366;;;:::o;12446:419::-;12612:4;12650:2;12639:9;12635:18;12627:26;;12699:9;12693:4;12689:20;12685:1;12674:9;12670:17;12663:47;12727:131;12853:4;12727:131;:::i;:::-;12719:139;;12446:419;;;:::o;12871:179::-;13011:31;13007:1;12999:6;12995:14;12988:55;12871:179;:::o;13056:366::-;13198:3;13219:67;13283:2;13278:3;13219:67;:::i;:::-;13212:74;;13295:93;13384:3;13295:93;:::i;:::-;13413:2;13408:3;13404:12;13397:19;;13056:366;;;:::o;13428:419::-;13594:4;13632:2;13621:9;13617:18;13609:26;;13681:9;13675:4;13671:20;13667:1;13656:9;13652:17;13645:47;13709:131;13835:4;13709:131;:::i;:::-;13701:139;;13428:419;;;:::o;13853:224::-;13993:34;13989:1;13981:6;13977:14;13970:58;14062:7;14057:2;14049:6;14045:15;14038:32;13853:224;:::o;14083:366::-;14225:3;14246:67;14310:2;14305:3;14246:67;:::i;:::-;14239:74;;14322:93;14411:3;14322:93;:::i;:::-;14440:2;14435:3;14431:12;14424:19;;14083:366;;;:::o;14455:419::-;14621:4;14659:2;14648:9;14644:18;14636:26;;14708:9;14702:4;14698:20;14694:1;14683:9;14679:17;14672:47;14736:131;14862:4;14736:131;:::i;:::-;14728:139;;14455:419;;;:::o;14880:222::-;15020:34;15016:1;15008:6;15004:14;14997:58;15089:5;15084:2;15076:6;15072:15;15065:30;14880:222;:::o;15108:366::-;15250:3;15271:67;15335:2;15330:3;15271:67;:::i;:::-;15264:74;;15347:93;15436:3;15347:93;:::i;:::-;15465:2;15460:3;15456:12;15449:19;;15108:366;;;:::o;15480:419::-;15646:4;15684:2;15673:9;15669:18;15661:26;;15733:9;15727:4;15723:20;15719:1;15708:9;15704:17;15697:47;15761:131;15887:4;15761:131;:::i;:::-;15753:139;;15480:419;;;:::o;15905:225::-;16045:34;16041:1;16033:6;16029:14;16022:58;16114:8;16109:2;16101:6;16097:15;16090:33;15905:225;:::o;16136:366::-;16278:3;16299:67;16363:2;16358:3;16299:67;:::i;:::-;16292:74;;16375:93;16464:3;16375:93;:::i;:::-;16493:2;16488:3;16484:12;16477:19;;16136:366;;;:::o;16508:419::-;16674:4;16712:2;16701:9;16697:18;16689:26;;16761:9;16755:4;16751:20;16747:1;16736:9;16732:17;16725:47;16789:131;16915:4;16789:131;:::i;:::-;16781:139;;16508:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1232200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 537,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 537,
									"end": 740,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 651,
									"end": 656,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 651,
									"end": 664,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 651,
									"end": 664,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 651,
									"end": 664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 651,
									"end": 664,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 651,
									"end": 664,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 684,
									"end": 691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 674,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 674,
									"end": 691,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 674,
									"end": 691,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 674,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 674,
									"end": 691,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 674,
									"end": 691,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 701,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 707,
									"end": 717,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 719,
									"end": 732,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 701,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 701,
									"end": 706,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 706,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 701,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 733,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 701,
									"end": 733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 701,
									"end": 733,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 701,
									"end": 733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4605,
									"end": 4994,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4605,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4707,
									"end": 4708,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4688,
									"end": 4709,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4688,
									"end": 4709,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4688,
									"end": 4695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4688,
									"end": 4709,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4688,
									"end": 4709,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4688,
									"end": 4709,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 4680,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4680,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4805,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 4785,
									"end": 4786,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4789,
									"end": 4796,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4798,
									"end": 4804,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 4756,
									"end": 4776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4756,
									"end": 4776,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4805,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4756,
									"end": 4805,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4805,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 4756,
									"end": 4805,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4838,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4828,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4816,
									"end": 4828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 4816,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4816,
									"end": 4838,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4870,
									"end": 4876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4858,
									"end": 4865,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4866,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 4848,
									"end": 4876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4848,
									"end": 4876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4912,
									"end": 4919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4908,
									"end": 4909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 4921,
									"end": 4927,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 4891,
									"end": 4928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4928,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 4939,
									"end": 4987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4967,
									"end": 4968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4971,
									"end": 4978,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4980,
									"end": 4986,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4939,
									"end": 4958,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4939,
									"end": 4958,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4958,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4939,
									"end": 4987,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4987,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4939,
									"end": 4987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4939,
									"end": 4987,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4939,
									"end": 4987,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4605,
									"end": 4994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4605,
									"end": 4994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4605,
									"end": 4994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6732,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 6611,
									"end": 6732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6732,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6732,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6732,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6732,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6767,
									"end": 6887,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6767,
									"end": 6887,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6767,
									"end": 6887,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6767,
									"end": 6887,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6767,
									"end": 6887,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6767,
									"end": 6887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3360,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 3409,
									"end": 3488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "tag",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "tag",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 3580,
									"end": 3587,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3560,
									"end": 3569,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3556,
									"end": 3578,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3514,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "tag",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3307,
									"end": 3598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3647,
									"end": 3656,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3637,
									"end": 3662,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3707,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3678,
									"end": 3708,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 3711,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "tag",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "tag",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 3882,
									"end": 3889,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3862,
									"end": 3871,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3816,
									"end": 3890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "tag",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3608,
									"end": 3900,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3939,
									"end": 3941,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "tag",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3910,
									"end": 4039,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "147"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "151"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "152"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 5,
									"value": "152"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 5,
									"value": "151"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 5,
									"value": "147"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "155"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 5,
									"value": "155"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "161"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 5,
									"value": "161"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "166"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 5,
									"value": "166"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "167"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 5,
									"value": "167"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "164"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "168"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 5,
									"value": "168"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "172"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 5,
									"value": "172"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 5,
									"value": "164"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9094,
									"end": 9105,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9128,
									"end": 9134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9123,
									"end": 9126,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9116,
									"end": 9135,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 9168,
									"end": 9172,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9163,
									"end": 9166,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9159,
									"end": 9173,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9144,
									"end": 9173,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9144,
									"end": 9173,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9185,
									"end": 9366,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 9185,
									"end": 9366,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9325,
									"end": 9358,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 9321,
									"end": 9322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9313,
									"end": 9319,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9309,
									"end": 9323,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9302,
									"end": 9359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 9185,
									"end": 9366,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9185,
									"end": 9366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9738,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 9372,
									"end": 9738,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9514,
									"end": 9517,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9535,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "177"
								},
								{
									"begin": 9599,
									"end": 9601,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 9594,
									"end": 9597,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9535,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 9535,
									"end": 9602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9535,
									"end": 9602,
									"name": "tag",
									"source": 5,
									"value": "177"
								},
								{
									"begin": 9535,
									"end": 9602,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9528,
									"end": 9602,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9528,
									"end": 9602,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9611,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "178"
								},
								{
									"begin": 9700,
									"end": 9703,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9611,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 9611,
									"end": 9704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9611,
									"end": 9704,
									"name": "tag",
									"source": 5,
									"value": "178"
								},
								{
									"begin": 9611,
									"end": 9704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9729,
									"end": 9731,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9724,
									"end": 9727,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9720,
									"end": 9732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9713,
									"end": 9732,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9713,
									"end": 9732,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9738,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9738,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9738,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9738,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9744,
									"end": 10163,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 9744,
									"end": 10163,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9910,
									"end": 9914,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9948,
									"end": 9950,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9937,
									"end": 9946,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9933,
									"end": 9951,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9925,
									"end": 9951,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9925,
									"end": 9951,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9997,
									"end": 10006,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9991,
									"end": 9995,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9987,
									"end": 10007,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 9983,
									"end": 9984,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9972,
									"end": 9981,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9968,
									"end": 9985,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9961,
									"end": 10008,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 10025,
									"end": 10156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 10151,
									"end": 10155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 10025,
									"end": 10156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 10025,
									"end": 10156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10025,
									"end": 10156,
									"name": "tag",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 10025,
									"end": 10156,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10017,
									"end": 10156,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10017,
									"end": 10156,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9744,
									"end": 10163,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9744,
									"end": 10163,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9744,
									"end": 10163,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9744,
									"end": 10163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10169,
									"end": 10349,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 10169,
									"end": 10349,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10217,
									"end": 10294,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10214,
									"end": 10215,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10207,
									"end": 10295,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 10314,
									"end": 10318,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 10311,
									"end": 10312,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 10304,
									"end": 10319,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 10338,
									"end": 10342,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 10335,
									"end": 10336,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10328,
									"end": 10343,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10395,
									"end": 10398,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10414,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 10432,
									"end": 10433,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10414,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 10414,
									"end": 10434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10414,
									"end": 10434,
									"name": "tag",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 10414,
									"end": 10434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10409,
									"end": 10434,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 10409,
									"end": 10434,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10448,
									"end": 10468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "184"
								},
								{
									"begin": 10466,
									"end": 10467,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10448,
									"end": 10468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 10448,
									"end": 10468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10448,
									"end": 10468,
									"name": "tag",
									"source": 5,
									"value": "184"
								},
								{
									"begin": 10448,
									"end": 10468,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10443,
									"end": 10468,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 10443,
									"end": 10468,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10491,
									"end": 10492,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10488,
									"end": 10489,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10484,
									"end": 10493,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10477,
									"end": 10493,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10477,
									"end": 10493,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10512,
									"end": 10515,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 10509,
									"end": 10510,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10506,
									"end": 10516,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 10503,
									"end": 10539,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 10503,
									"end": 10539,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "185"
								},
								{
									"begin": 10503,
									"end": 10539,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 10519,
									"end": 10537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "186"
								},
								{
									"begin": 10519,
									"end": 10537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 10519,
									"end": 10537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10519,
									"end": 10537,
									"name": "tag",
									"source": 5,
									"value": "186"
								},
								{
									"begin": 10519,
									"end": 10537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10503,
									"end": 10539,
									"name": "tag",
									"source": 5,
									"value": "185"
								},
								{
									"begin": 10503,
									"end": 10539,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10355,
									"end": 10546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10552,
									"end": 10670,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 10552,
									"end": 10670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10639,
									"end": 10663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 10657,
									"end": 10662,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 10639,
									"end": 10663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 10639,
									"end": 10663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10639,
									"end": 10663,
									"name": "tag",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 10639,
									"end": 10663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10634,
									"end": 10637,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10627,
									"end": 10664,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 10552,
									"end": 10670,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10552,
									"end": 10670,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10552,
									"end": 10670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10769,
									"end": 10773,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10807,
									"end": 10809,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 10796,
									"end": 10805,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10792,
									"end": 10810,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10784,
									"end": 10810,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10784,
									"end": 10810,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10820,
									"end": 10891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 10888,
									"end": 10889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10877,
									"end": 10886,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10873,
									"end": 10890,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10864,
									"end": 10870,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 10820,
									"end": 10891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 10820,
									"end": 10891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10820,
									"end": 10891,
									"name": "tag",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 10820,
									"end": 10891,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10676,
									"end": 10898,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 6889,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a835a14047dc4797453d39ea7625f4eb8f6b3f829b30388a08db442f8cae60a64736f6c63430008120033",
									".code": [
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 6889,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 763,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 763,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2166,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2166,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2166,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1135,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1135,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1013,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1013,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2982,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2982,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1285,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1285,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1285,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 884,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 884,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3368,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3368,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3368,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1440,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1440,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1440,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1966,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1966,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1966,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 763,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 849,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 842,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 842,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 842,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2335,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2301,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2412,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2383,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2383,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2472,
											"end": 2477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2463,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2736,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2760,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2781,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2830,
											"end": 2834,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2814,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2862,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2862,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3160,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3160,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3171,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3236,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3261,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3236,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3236,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3211,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3275,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3211,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 884,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 972,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 884,
											"end": 986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3513,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3609,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3585,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3610,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3585,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3663,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3663,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3620,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3620,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3748,
											"end": 3753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3762,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3798,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3739,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3799,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3739,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3820,
											"end": 3831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1595,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1571,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1682,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1648,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1648,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1730,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1766,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1809,
											"end": 1814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1826,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1799,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1827,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1799,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1837,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 6067,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5697,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5820,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5820,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5913,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5898,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5898,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5988,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5994,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 6004,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6037,
											"end": 6042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6028,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 6067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 6067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 6067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6575,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6134,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6301,
											"end": 6306,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6291,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6316,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6291,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6350,
											"end": 6367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6330,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6367,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6326,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6326,
											"end": 6569,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6391,
											"end": 6407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6391,
											"end": 6417,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6391,
											"end": 6417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6383,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6383,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6502,
											"end": 6507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6516,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6534,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6493,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6544,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6493,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6326,
											"end": 6569,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6326,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6254,
											"end": 6575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 4540,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3889,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4007,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4085,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4085,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4160,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4181,
											"end": 4185,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4160,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4160,
											"end": 4198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4160,
											"end": 4198,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4160,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4285,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4285,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4256,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4256,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4380,
											"end": 4391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4380,
											"end": 4400,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4400,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4420,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4459,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4522,
											"end": 4524,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4496,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4533,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4496,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3997,
											"end": 4540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 4540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 4540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 4540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 4540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6732,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6611,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6887,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6767,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6400,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6180,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6354,
											"name": "PUSH",
											"source": 5,
											"value": "596F7520646F206E6F7420686176652073756666696369656E7420746F6B656E"
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6392,
											"name": "PUSH",
											"source": 5,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6365,
											"end": 6393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6772,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6406,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6569,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6569,
											"end": 6636,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6569,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6734,
											"end": 6737,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6645,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6738,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6645,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6754,
											"end": 6766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 7197,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6778,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6967,
											"end": 6985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7040,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7015,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7059,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7190,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7059,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 7197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 7197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 7197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 7197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7380,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7203,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7372,
											"name": "PUSH",
											"source": 5,
											"value": "596F752063616E6E6F7420617070726F766520796F757273656C660000000000"
										},
										{
											"begin": 7339,
											"end": 7340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7327,
											"end": 7341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7752,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 7386,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 7608,
											"end": 7611,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7549,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7549,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7549,
											"end": 7616,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7549,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7542,
											"end": 7616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7542,
											"end": 7616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7714,
											"end": 7717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7625,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7718,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7625,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 7746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 8177,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7758,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7951,
											"end": 7960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 7965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 7965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8005,
											"end": 8009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8001,
											"end": 8021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7995,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 7999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7975,
											"end": 8022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8039,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8165,
											"end": 8169,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8039,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8039,
											"end": 8170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8039,
											"end": 8170,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8039,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 8177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 8177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 8177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 8177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8183,
											"end": 8363,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8183,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8308,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8318,
											"end": 8333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8342,
											"end": 8357,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8429,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8424,
											"end": 8449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8424,
											"end": 8449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8463,
											"end": 8483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8458,
											"end": 8483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8458,
											"end": 8483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8504,
											"end": 8505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8533,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8556,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8519,
											"end": 8556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8536,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 8536,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8536,
											"end": 8554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8536,
											"end": 8554,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 8536,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8556,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8519,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8628,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8648,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8628,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8662,
											"end": 8682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8682,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8662,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8682,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8720,
											"end": 8730,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8717,
											"end": 8753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8733,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8753,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8717,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8990,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8766,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8906,
											"end": 8940,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 8904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8883,
											"end": 8941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8982,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9362,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8996,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9159,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9223,
											"end": 9225,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9159,
											"end": 9226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9226,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9159,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9152,
											"end": 9226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9152,
											"end": 9226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 9324,
											"end": 9327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 9235,
											"end": 9328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9328,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 9235,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9355,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9348,
											"end": 9351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9337,
											"end": 9356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9337,
											"end": 9356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9362,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9787,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9368,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9534,
											"end": 9538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9572,
											"end": 9574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9596,
											"end": 9605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9585,
											"end": 9632,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9775,
											"end": 9779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 9649,
											"end": 9780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9780,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9649,
											"end": 9780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9641,
											"end": 9780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9641,
											"end": 9780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9793,
											"end": 10018,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 9793,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9933,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "596F752063616E6E6F74207472616E7366657220746F6B656E20746F20796F75"
										},
										{
											"begin": 9929,
											"end": 9930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 9931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "PUSH",
											"source": 5,
											"value": "722073656C660000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9989,
											"end": 9995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9793,
											"end": 10018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9793,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10390,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10024,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10166,
											"end": 10169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10187,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10251,
											"end": 10253,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10246,
											"end": 10249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10187,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10187,
											"end": 10254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10187,
											"end": 10254,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10187,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 10263,
											"end": 10356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10356,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10263,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10376,
											"end": 10379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10365,
											"end": 10384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10365,
											"end": 10384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10815,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 10396,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10600,
											"end": 10602,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10589,
											"end": 10598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10577,
											"end": 10603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10577,
											"end": 10603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10649,
											"end": 10658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10639,
											"end": 10659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10633,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10620,
											"end": 10637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10803,
											"end": 10807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10677,
											"end": 10808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10808,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10677,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10669,
											"end": 10808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10669,
											"end": 10808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10821,
											"end": 11044,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 10821,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10961,
											"end": 10995,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10938,
											"end": 10996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11036,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11025,
											"end": 11027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11017,
											"end": 11023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 11028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11006,
											"end": 11037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10821,
											"end": 11044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10821,
											"end": 11044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11416,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 11050,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11213,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 11277,
											"end": 11279,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11272,
											"end": 11275,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11213,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 11213,
											"end": 11280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11213,
											"end": 11280,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 11213,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11378,
											"end": 11381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 11289,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11382,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11289,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11407,
											"end": 11409,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11402,
											"end": 11405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11841,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 11422,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11588,
											"end": 11592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11603,
											"end": 11629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11603,
											"end": 11629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11675,
											"end": 11684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11669,
											"end": 11673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11665,
											"end": 11685,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 11663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11639,
											"end": 11686,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 11703,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11695,
											"end": 11834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11695,
											"end": 11834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 12068,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 11847,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11987,
											"end": 12021,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11971,
											"end": 11985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11964,
											"end": 12022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12056,
											"end": 12060,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12051,
											"end": 12053,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12039,
											"end": 12054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12032,
											"end": 12061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 12068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 12068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12440,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 12074,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12216,
											"end": 12219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 12301,
											"end": 12303,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 12296,
											"end": 12299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 12237,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12304,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 12237,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12230,
											"end": 12304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12230,
											"end": 12304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12313,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12313,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 12313,
											"end": 12406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12313,
											"end": 12406,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 12313,
											"end": 12406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12431,
											"end": 12433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12426,
											"end": 12429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12422,
											"end": 12434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12865,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 12446,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12612,
											"end": 12616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12650,
											"end": 12652,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12699,
											"end": 12708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12689,
											"end": 12709,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12685,
											"end": 12686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12674,
											"end": 12683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12670,
											"end": 12687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12663,
											"end": 12710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12853,
											"end": 12857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 12727,
											"end": 12858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12858,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12727,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12719,
											"end": 12858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12719,
											"end": 12858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12871,
											"end": 13050,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 12871,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13042,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 13007,
											"end": 13008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12995,
											"end": 13009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12871,
											"end": 13050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12871,
											"end": 13050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13198,
											"end": 13201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 13283,
											"end": 13285,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 13219,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13212,
											"end": 13286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13212,
											"end": 13286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 13384,
											"end": 13387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 13295,
											"end": 13388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 13415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13594,
											"end": 13598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13634,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13617,
											"end": 13635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13681,
											"end": 13690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13675,
											"end": 13679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13652,
											"end": 13669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13645,
											"end": 13692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13835,
											"end": 13839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 13709,
											"end": 13840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13853,
											"end": 14077,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 13853,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13993,
											"end": 14027,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 13987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13977,
											"end": 13991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13970,
											"end": 14028,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14062,
											"end": 14069,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14057,
											"end": 14059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14045,
											"end": 14060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13853,
											"end": 14077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13853,
											"end": 14077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14225,
											"end": 14228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 14305,
											"end": 14308,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 14246,
											"end": 14313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14239,
											"end": 14313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14239,
											"end": 14313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 14411,
											"end": 14414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 14322,
											"end": 14415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14435,
											"end": 14438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14431,
											"end": 14443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14424,
											"end": 14443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14424,
											"end": 14443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14648,
											"end": 14657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14644,
											"end": 14662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14694,
											"end": 14695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14679,
											"end": 14696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14672,
											"end": 14719,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 14736,
											"end": 14867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 15102,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 14880,
											"end": 15102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15020,
											"end": 15054,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 15016,
											"end": 15017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15004,
											"end": 15018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14997,
											"end": 15055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15094,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15076,
											"end": 15082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15065,
											"end": 15095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 15102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 15102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15474,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 15108,
											"end": 15474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15250,
											"end": 15253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15271,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 15330,
											"end": 15333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15271,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 15271,
											"end": 15338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15271,
											"end": 15338,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 15271,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15264,
											"end": 15338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15264,
											"end": 15338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15347,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 15436,
											"end": 15439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15347,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 15347,
											"end": 15440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15347,
											"end": 15440,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 15347,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15465,
											"end": 15467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15460,
											"end": 15463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15456,
											"end": 15468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15449,
											"end": 15468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15449,
											"end": 15468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15480,
											"end": 15899,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 15480,
											"end": 15899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15686,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15673,
											"end": 15682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15661,
											"end": 15687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15661,
											"end": 15687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15733,
											"end": 15742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15727,
											"end": 15731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15723,
											"end": 15743,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15719,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15708,
											"end": 15717,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15704,
											"end": 15721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15761,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15887,
											"end": 15891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15761,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 15761,
											"end": 15892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15761,
											"end": 15892,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15761,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15753,
											"end": 15892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15753,
											"end": 15892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15480,
											"end": 15899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15480,
											"end": 15899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15480,
											"end": 15899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15480,
											"end": 15899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15905,
											"end": 16130,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 15905,
											"end": 16130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16045,
											"end": 16079,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 16041,
											"end": 16042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16033,
											"end": 16039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16029,
											"end": 16043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16022,
											"end": 16080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16114,
											"end": 16122,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16109,
											"end": 16111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16101,
											"end": 16107,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16097,
											"end": 16112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16090,
											"end": 16123,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15905,
											"end": 16130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15905,
											"end": 16130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16136,
											"end": 16502,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 16136,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16278,
											"end": 16281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 16363,
											"end": 16365,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 16358,
											"end": 16361,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16299,
											"end": 16366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 16299,
											"end": 16366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16299,
											"end": 16366,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 16299,
											"end": 16366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16292,
											"end": 16366,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16292,
											"end": 16366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16375,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 16464,
											"end": 16467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16375,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 16375,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16375,
											"end": 16468,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 16375,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16493,
											"end": 16495,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16488,
											"end": 16491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16484,
											"end": 16496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16477,
											"end": 16496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16477,
											"end": 16496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16136,
											"end": 16502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16136,
											"end": 16502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16136,
											"end": 16502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16136,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16927,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 16508,
											"end": 16927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16674,
											"end": 16678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16712,
											"end": 16714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16701,
											"end": 16710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16697,
											"end": 16715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16689,
											"end": 16715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16689,
											"end": 16715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16761,
											"end": 16770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16755,
											"end": 16759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16751,
											"end": 16771,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16747,
											"end": 16748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16736,
											"end": 16745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16732,
											"end": 16749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16725,
											"end": 16772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16789,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 16915,
											"end": 16919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16789,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 16789,
											"end": 16920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16789,
											"end": 16920,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 16789,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16781,
											"end": 16920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16781,
											"end": 16920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol",
								"Context.sol",
								"ERC20.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x290e04168338b3fba8216c6267fd3adb15f812152a875911e0ca87d04af25893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://16f41536453ffbdf405ec48338f31d59a8875e00552c8d8e1789334ef6dd8216\",\"dweb:/ipfs/QmNhQwDqWzojAmhwZoE4sEUkGBoRGCo3NXRnJYG6gnL4YF\"]},\"Context.sol\":{\"keccak256\":\"0x0e7fc46a788f111227368fb1b9e99f70d576f06ce6a320788e3e66a6f64df385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8600772385b8d0c1d5afb56696077170d5d8cc171caa4cf4cda656ef8595edf3\",\"dweb:/ipfs/QmVcDmYAt3RA5F1aEpmoq1pUQJAcqMJ6NTX2G8a2KSGYUt\"]},\"ERC20.sol\":{\"keccak256\":\"0x9fd5234c76416d40b4e33ef4f2bb051ae0acc8633287ec0162bef7a2b3450a5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3600b048887d5a8e2d8645c8c0a3ac20e7071d60b7ed15b9b0dad9cb5931b690\",\"dweb:/ipfs/QmbCr8aLu9Wrj2zXiSWTgudEvM5WHqZHEdeQ2NX1t8e2QD\"]},\"IERC20.sol\":{\"keccak256\":\"0x2bc873256d450e99e18c2c9fb10969b280896a40f457bf788d9aa248b3cf8ba1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1427f8fec1ab8f805a9272515c16623dc4579a30c65332cabfc7bf42a9b619\",\"dweb:/ipfs/QmacanLNU81f1Ng3G5pf96sP1GXTExTHrTzfZvzhxHowNw\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x5cd4c0bc4b9f9503618498a1c3a3112484c9a1e1f3bc09514e2abd8ee78537c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b96ed92dcfbc3d188df96156c4b889bd4e9bda82ac82750c244bed838f8dab7\",\"dweb:/ipfs/QmXRyc9ucbjKizzpjvdyyZJpxHPqQSA9PexUH8onKT9fx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 412,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 418,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 420,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 422,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 424,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x2bc873256d450e99e18c2c9fb10969b280896a40f457bf788d9aa248b3cf8ba1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1427f8fec1ab8f805a9272515c16623dc4579a30c65332cabfc7bf42a9b619\",\"dweb:/ipfs/QmacanLNU81f1Ng3G5pf96sP1GXTExTHrTzfZvzhxHowNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x2bc873256d450e99e18c2c9fb10969b280896a40f457bf788d9aa248b3cf8ba1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1427f8fec1ab8f805a9272515c16623dc4579a30c65332cabfc7bf42a9b619\",\"dweb:/ipfs/QmacanLNU81f1Ng3G5pf96sP1GXTExTHrTzfZvzhxHowNw\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x5cd4c0bc4b9f9503618498a1c3a3112484c9a1e1f3bc09514e2abd8ee78537c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b96ed92dcfbc3d188df96156c4b889bd4e9bda82ac82750c244bed838f8dab7\",\"dweb:/ipfs/QmXRyc9ucbjKizzpjvdyyZJpxHPqQSA9PexUH8onKT9fx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol": {
				"ast": {
					"absolutePath": "@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol",
					"exportedSymbols": {
						"Sapphire": [
							375
						]
					},
					"id": 376,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Sapphire",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "64:102:0",
								"text": " @title Sapphire\n @dev Convenient wrapper methods for Sapphire's cryptographic primitives."
							},
							"fullyImplemented": true,
							"id": 375,
							"linearizedBaseContracts": [
								375
							],
							"name": "Sapphire",
							"nameLocation": "175:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "RANDOM_BYTES",
									"nameLocation": "215:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "190:90:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "190:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303031",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "238:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000001"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "DERIVE_KEY",
									"nameLocation": "311:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "286:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303032",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "332:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000002"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "ENCRYPT",
									"nameLocation": "405:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "380:85:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303033",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "423:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000003"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "DECRYPT",
									"nameLocation": "496:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "471:85:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "471:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303034",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "514:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000004"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "GENERAGE_SIGNING_KEYPAIR",
									"nameLocation": "587:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "562:102:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303035",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "622:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000005"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 20,
									"mutability": "constant",
									"name": "SIGN_DIGEST",
									"nameLocation": "695:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "670:89:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303036",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "717:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000006"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 23,
									"mutability": "constant",
									"name": "VERIFY_DIGEST",
									"nameLocation": "790:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "765:91:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303037",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "814:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000007"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 26,
									"mutability": "constant",
									"name": "CURVE25519_PUBLIC_KEY",
									"nameLocation": "887:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "862:99:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "862:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030303030303038",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "919:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0100000000000000000000000000000000000008"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Sapphire.Curve25519PublicKey",
									"id": 28,
									"name": "Curve25519PublicKey",
									"nameLocation": "973:19:0",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "968:36:0",
									"underlyingType": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "996:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"canonicalName": "Sapphire.Curve25519SecretKey",
									"id": 30,
									"name": "Curve25519SecretKey",
									"nameLocation": "1014:19:0",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "1009:36:0",
									"underlyingType": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1037:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"canonicalName": "Sapphire.SigningAlg",
									"id": 38,
									"members": [
										{
											"id": 31,
											"name": "Ed25519Oasis",
											"nameLocation": "1268:12:0",
											"nodeType": "EnumValue",
											"src": "1268:12:0"
										},
										{
											"id": 32,
											"name": "Ed25519Pure",
											"nameLocation": "1346:11:0",
											"nodeType": "EnumValue",
											"src": "1346:11:0"
										},
										{
											"id": 33,
											"name": "Ed25519PrehashedSha512",
											"nameLocation": "1440:22:0",
											"nodeType": "EnumValue",
											"src": "1440:22:0"
										},
										{
											"id": 34,
											"name": "Secp256k1Oasis",
											"nameLocation": "1665:14:0",
											"nodeType": "EnumValue",
											"src": "1665:14:0"
										},
										{
											"id": 35,
											"name": "Secp256k1PrehashedKeccak256",
											"nameLocation": "1824:27:0",
											"nodeType": "EnumValue",
											"src": "1824:27:0"
										},
										{
											"id": 36,
											"name": "Secp256k1PrehashedSha256",
											"nameLocation": "1926:24:0",
											"nodeType": "EnumValue",
											"src": "1926:24:0"
										},
										{
											"id": 37,
											"name": "Sr25519",
											"nameLocation": "2016:7:0",
											"nodeType": "EnumValue",
											"src": "2016:7:0"
										}
									],
									"name": "SigningAlg",
									"nameLocation": "1056:10:0",
									"nodeType": "EnumDefinition",
									"src": "1051:978:0"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "2506:202:0",
										"statements": [
											{
												"assignments": [
													49,
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2522:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "2517:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 48,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "entropy",
														"nameLocation": "2544:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "2531:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 50,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 56,
																	"name": "numBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "2603:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 57,
																	"name": "pers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "2613:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 54,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2592:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2596:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2592:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2592:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 52,
															"name": "RANDOM_BYTES",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "2555:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2568:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "2555:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2555:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "2646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72616e646f6d42797465733a206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2655:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac",
																"typeString": "literal_string \"randomBytes: failed\""
															},
															"value": "randomBytes: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac",
																"typeString": "literal_string \"randomBytes: failed\""
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "2638:39:0"
											},
											{
												"expression": {
													"id": 66,
													"name": "entropy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 47,
												"id": 67,
												"nodeType": "Return",
												"src": "2687:14:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2035:343:0",
										"text": " @dev Returns cryptographically secure random bytes.\n @param numBytes The number of bytes to return.\n @param pers An optional personalization string to increase domain separation.\n @return The random bytes. If the number of bytes requested is too large (over 1024), a smaller amount (1024) will be returned."
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "randomBytes",
									"nameLocation": "2392:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "numBytes",
												"nameLocation": "2412:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2404:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "pers",
												"nameLocation": "2435:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2422:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:37:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2488:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 45,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:14:0"
									},
									"scope": 375,
									"src": "2383:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3167:604:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "scalar",
														"nameLocation": "3190:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "3177:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 81,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														{
															"id": 85,
															"name": "pers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 83,
														"name": "randomBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "3199:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:43:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 88,
															"name": "scalar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 90,
														"indexExpression": {
															"hexValue": "30",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3288:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3281:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "&=",
													"rightHandSide": {
														"hexValue": "30786638",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3294:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "0xf8"
													},
													"src": "3281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "3281:17:0"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 94,
															"name": "scalar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 96,
														"indexExpression": {
															"hexValue": "3331",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3375:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31_by_1",
																"typeString": "int_const 31"
															},
															"value": "31"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3368:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "&=",
													"rightHandSide": {
														"hexValue": "30783766",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3382:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_127_by_1",
															"typeString": "int_const 127"
														},
														"value": "0x7f"
													},
													"src": "3368:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "3368:18:0"
											},
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 100,
															"name": "scalar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3421:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 102,
														"indexExpression": {
															"hexValue": "3331",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3428:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31_by_1",
																"typeString": "int_const 31"
															},
															"value": "31"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"hexValue": "30783430",
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3435:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "0x40"
													},
													"src": "3421:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3421:18:0"
											},
											{
												"assignments": [
													107,
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3476:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "3471:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 106,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "pkBytes",
														"nameLocation": "3498:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "3485:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 108,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"arguments": [
														{
															"id": 112,
															"name": "scalar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 110,
															"name": "CURVE25519_PUBLIC_KEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3509:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3531:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3509:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3509:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3470:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "3589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "67656e206375727665323535313920706b3a206661696c6564",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3598:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d",
																"typeString": "literal_string \"gen curve25519 pk: failed\""
															},
															"value": "gen curve25519 pk: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d",
																"typeString": "literal_string \"gen curve25519 pk: failed\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3581:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3581:45:0"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 124,
																			"name": "pkBytes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "3690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3682:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "3682:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3682:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 120,
																	"name": "Curve25519PublicKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "3657:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_userDefinedValueType$_Curve25519PublicKey_$28_$",
																		"typeString": "type(Sapphire.Curve25519PublicKey)"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3677:4:0",
																"memberName": "wrap",
																"nodeType": "MemberAccess",
																"src": "3657:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519PublicKey_$28_$",
																	"typeString": "function (bytes32) pure returns (Sapphire.Curve25519PublicKey)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3657:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
																"typeString": "Sapphire.Curve25519PublicKey"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 131,
																			"name": "scalar",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "3746:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3738:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 129,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "3738:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3738:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 127,
																	"name": "Curve25519SecretKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "3713:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_userDefinedValueType$_Curve25519SecretKey_$30_$",
																		"typeString": "type(Sapphire.Curve25519SecretKey)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3733:4:0",
																"memberName": "wrap",
																"nodeType": "MemberAccess",
																"src": "3713:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519SecretKey_$30_$",
																	"typeString": "function (bytes32) pure returns (Sapphire.Curve25519SecretKey)"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3713:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
																"typeString": "Sapphire.Curve25519SecretKey"
															}
														}
													],
													"id": 134,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3643:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Curve25519PublicKey_$28_$_t_userDefinedValueType$_Curve25519SecretKey_$30_$",
														"typeString": "tuple(Sapphire.Curve25519PublicKey,Sapphire.Curve25519SecretKey)"
													}
												},
												"functionReturnParameters": 80,
												"id": 135,
												"nodeType": "Return",
												"src": "3636:128:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2714:295:0",
										"text": " @dev Generates a Curve25519 keypair.\n @param pers An optional personalization string used to add domain separation.\n @return pk The Curve25519 public key. Useful for key exchange.\n @return sk The Curve25519 secret key. Pairs well with {`deriveSymmetricKey`}."
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateCurve25519KeyPair",
									"nameLocation": "3023:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "pers",
												"nameLocation": "3062:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3049:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3049:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3048:19:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "pk",
												"nameLocation": "3135:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3115:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
													"typeString": "Sapphire.Curve25519PublicKey"
												},
												"typeName": {
													"id": 75,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 74,
														"name": "Curve25519PublicKey",
														"nameLocations": [
															"3115:19:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 28,
														"src": "3115:19:0"
													},
													"referencedDeclaration": 28,
													"src": "3115:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
														"typeString": "Sapphire.Curve25519PublicKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "sk",
												"nameLocation": "3159:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3139:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
													"typeString": "Sapphire.Curve25519SecretKey"
												},
												"typeName": {
													"id": 78,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 77,
														"name": "Curve25519SecretKey",
														"nameLocations": [
															"3139:19:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "3139:19:0"
													},
													"referencedDeclaration": 30,
													"src": "3139:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
														"typeString": "Sapphire.Curve25519SecretKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:48:0"
									},
									"scope": 375,
									"src": "3014:757:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4142:230:0",
										"statements": [
											{
												"assignments": [
													150,
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4158:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "4153:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "symmetric",
														"nameLocation": "4180:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "4167:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 151,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 157,
																	"name": "peerPublicKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4239:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
																		"typeString": "Sapphire.Curve25519PublicKey"
																	}
																},
																{
																	"id": 158,
																	"name": "secretKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "4254:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
																		"typeString": "Sapphire.Curve25519SecretKey"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
																		"typeString": "Sapphire.Curve25519PublicKey"
																	},
																	{
																		"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
																		"typeString": "Sapphire.Curve25519SecretKey"
																	}
																],
																"expression": {
																	"id": 155,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4228:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4232:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4228:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 153,
															"name": "DERIVE_KEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "4193:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4204:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "4193:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4152:122:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4292:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64657269766553796d6d65747269634b65793a206661696c6564",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02",
																"typeString": "literal_string \"deriveSymmetricKey: failed\""
															},
															"value": "deriveSymmetricKey: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02",
																"typeString": "literal_string \"deriveSymmetricKey: failed\""
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4284:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4284:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "symmetric",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4355:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 167,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4347:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 148,
												"id": 171,
												"nodeType": "Return",
												"src": "4340:25:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "3777:212:0",
										"text": " @dev Derive a symmetric key from a pair of keys using x25519.\n @param peerPublicKey The peer's public key.\n @param secretKey Your secret key.\n @return A derived symmetric key."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveSymmetricKey",
									"nameLocation": "4003:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "peerPublicKey",
												"nameLocation": "4051:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4031:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
													"typeString": "Sapphire.Curve25519PublicKey"
												},
												"typeName": {
													"id": 140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 139,
														"name": "Curve25519PublicKey",
														"nameLocations": [
															"4031:19:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 28,
														"src": "4031:19:0"
													},
													"referencedDeclaration": 28,
													"src": "4031:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Curve25519PublicKey_$28",
														"typeString": "Sapphire.Curve25519PublicKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "secretKey",
												"nameLocation": "4094:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4074:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
													"typeString": "Sapphire.Curve25519SecretKey"
												},
												"typeName": {
													"id": 143,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 142,
														"name": "Curve25519SecretKey",
														"nameLocations": [
															"4074:19:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "4074:19:0"
													},
													"referencedDeclaration": 30,
													"src": "4074:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Curve25519SecretKey_$30",
														"typeString": "Sapphire.Curve25519SecretKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:88:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4132:9:0"
									},
									"scope": 375,
									"src": "3994:378:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "4983:222:0",
										"statements": [
											{
												"assignments": [
													188,
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4999:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "4994:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 187,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "ciphertext",
														"nameLocation": "5021:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "5008:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 189,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5008:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 195,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "5078:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 196,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "5083:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 197,
																	"name": "plaintext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5090:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 198,
																	"name": "additionalData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "5101:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 193,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5067:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5071:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5067:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5067:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 191,
															"name": "ENCRYPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "5035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5043:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5035:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5035:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4993:133:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "656e63727970743a206661696c6564",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5153:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781",
																"typeString": "literal_string \"encrypt: failed\""
															},
															"value": "encrypt: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781",
																"typeString": "literal_string \"encrypt: failed\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5136:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5136:35:0"
											},
											{
												"expression": {
													"id": 207,
													"name": "ciphertext",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 190,
													"src": "5188:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "5181:17:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4378:427:0",
										"text": " @dev Encrypt and authenticate the plaintext and additional data using DeoxysII.\n @param key The key to use for encryption.\n @param nonce The nonce. Note that only the first 15 bytes of this parameter are used.\n @param plaintext The plaintext to encrypt and authenticate.\n @param additionalData The additional data to authenticate.\n @return The ciphertext with appended auth tag."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encrypt",
									"nameLocation": "4819:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4844:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4836:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "plaintext",
												"nameLocation": "4893:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4880:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4880:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "4925:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4912:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:119:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4969:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:14:0"
									},
									"scope": 375,
									"src": "4810:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "5875:221:0",
										"statements": [
											{
												"assignments": [
													225,
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5891:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "5886:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 227,
														"mutability": "mutable",
														"name": "plaintext",
														"nameLocation": "5913:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "5900:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 226,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 232,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "5969:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 233,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5974:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 234,
																	"name": "ciphertext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5981:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 235,
																	"name": "additionalData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5993:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 230,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5958:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5962:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5958:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5958:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 228,
															"name": "DECRYPT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "5926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5934:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5926:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5926:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5885:133:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646563727970743a206661696c6564",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6045:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c",
																"typeString": "literal_string \"decrypt: failed\""
															},
															"value": "decrypt: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c",
																"typeString": "literal_string \"decrypt: failed\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6028:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "6028:35:0"
											},
											{
												"expression": {
													"id": 244,
													"name": "plaintext",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 227,
													"src": "6080:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 223,
												"id": 245,
												"nodeType": "Return",
												"src": "6073:16:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "5211:485:0",
										"text": " @dev Decrypt and authenticate the ciphertext and additional data using DeoxysII. Reverts if the auth tag is incorrect.\n @param key The key to use for decryption.\n @param nonce The nonce. Note that only the first 15 bytes of this parameter are used.\n @param ciphertext The ciphertext with tag to decrypt and authenticate.\n @param additionalData The additional data to authenticate against the ciphertext.\n @return The original plaintext."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrypt",
									"nameLocation": "5710:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5735:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5727:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5756:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5748:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "ciphertext",
												"nameLocation": "5784:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5771:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "5817:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5804:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:120:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5861:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5861:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5860:14:0"
									},
									"scope": 375,
									"src": "5701:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "6684:236:0",
										"statements": [
											{
												"assignments": [
													261,
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6700:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "6695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 260,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "keypair",
														"nameLocation": "6722:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "6709:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 268,
																	"name": "alg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6793:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	}
																},
																{
																	"id": 269,
																	"name": "seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "6798:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6782:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6786:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6782:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 264,
															"name": "GENERAGE_SIGNING_KEYPAIR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "6733:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6771:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6733:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6694:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "67656e207369676e696e67206b6579706169723a206661696c6564",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20",
																"typeString": "literal_string \"gen signing keypair: failed\""
															},
															"value": "gen signing keypair: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20",
																"typeString": "literal_string \"gen signing keypair: failed\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6814:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "6814:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 280,
															"name": "keypair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "6889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6899:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6899:5:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6906:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 283,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6906:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 285,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6898:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 278,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6878:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6882:6:0",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6878:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6878:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"functionReturnParameters": 259,
												"id": 287,
												"nodeType": "Return",
												"src": "6871:42:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6102:411:0",
										"text": " @dev Generate a public/private key pair using the specified method and seed.\n @param alg The signing alg for which to generate a keypair.\n @param seed The seed to use for generating the key pair. You can use the `randomBytes` method if you don't already have a seed.\n @return publicKey The public half of the keypair.\n @return secretKey The secret half of the keypair."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateSigningKeyPair",
									"nameLocation": "6527:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "alg",
												"nameLocation": "6561:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SigningAlg_$38",
													"typeString": "enum Sapphire.SigningAlg"
												},
												"typeName": {
													"id": 250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 249,
														"name": "SigningAlg",
														"nameLocations": [
															"6550:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 38,
														"src": "6550:10:0"
													},
													"referencedDeclaration": 38,
													"src": "6550:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SigningAlg_$38",
														"typeString": "enum Sapphire.SigningAlg"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "6579:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6566:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6566:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6549:35:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "publicKey",
												"nameLocation": "6645:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6632:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6632:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "secretKey",
												"nameLocation": "6669:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6656:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6631:48:0"
									},
									"scope": 375,
									"src": "6518:402:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "7714:210:0",
										"statements": [
											{
												"assignments": [
													305,
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 305,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7730:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "7725:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 304,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "sig",
														"nameLocation": "7752:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "7739:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 306,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7739:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 312,
																	"name": "alg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "7806:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	}
																},
																{
																	"id": 313,
																	"name": "secretKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "7811:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 314,
																	"name": "contextOrHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "7822:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 315,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "7837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7795:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7799:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7795:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7795:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 308,
															"name": "SIGN_DIGEST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "7759:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7771:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7759:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7759:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7724:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "7873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7369676e3a206661696c6564",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af",
																"typeString": "literal_string \"sign: failed\""
															},
															"value": "sign: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af",
																"typeString": "literal_string \"sign: failed\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7865:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "7865:32:0"
											},
											{
												"expression": {
													"id": 324,
													"name": "sig",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 307,
													"src": "7914:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 325,
												"nodeType": "Return",
												"src": "7907:10:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "6926:594:0",
										"text": " @dev Sign a message within the provided context using the specified algorithm, and return the signature.\n @param alg The signing algorithm to use.\n @param secretKey The secret key to use for signing. The key must be valid for use with the requested algorithm.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n @param message Message to sign, should be zero-length if precomputed hash given\n @return signature The resulting signature.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sign",
									"nameLocation": "7534:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "alg",
												"nameLocation": "7559:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "7548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SigningAlg_$38",
													"typeString": "enum Sapphire.SigningAlg"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "SigningAlg",
														"nameLocations": [
															"7548:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 38,
														"src": "7548:10:0"
													},
													"referencedDeclaration": 38,
													"src": "7548:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SigningAlg_$38",
														"typeString": "enum Sapphire.SigningAlg"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "secretKey",
												"nameLocation": "7585:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "7572:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7572:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "contextOrHash",
												"nameLocation": "7617:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "7604:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7604:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7653:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "7640:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7538:128:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "7703:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "7690:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:24:0"
									},
									"scope": 375,
									"src": "7525:399:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "8890:241:0",
										"statements": [
											{
												"assignments": [
													345,
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8906:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "8901:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 344,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "8928:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "8915:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 346,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 352,
																	"name": "alg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "8982:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	}
																},
																{
																	"id": 353,
																	"name": "publicKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "8987:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 354,
																	"name": "contextOrHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "8998:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 355,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "9013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 356,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "9022:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_SigningAlg_$38",
																		"typeString": "enum Sapphire.SigningAlg"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 350,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8975:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8971:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 348,
															"name": "VERIFY_DIGEST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "8933:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8947:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "8933:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8933:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8900:142:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "9060:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7665726966793a206661696c6564",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9069:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2",
																"typeString": "literal_string \"verify: failed\""
															},
															"value": "verify: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2",
																"typeString": "literal_string \"verify: failed\""
															}
														],
														"id": 360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9052:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "9052:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "9114:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9118:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	},
																	"typeName": {
																		"id": 368,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9118:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 370,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bool_$",
																"typeString": "type(bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_bool_$",
																"typeString": "type(bool)"
															}
														],
														"expression": {
															"id": 365,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "9103:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9107:6:0",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "9103:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9103:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 343,
												"id": 372,
												"nodeType": "Return",
												"src": "9096:28:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "7930:741:0",
										"text": " @dev Verifies that the provided digest was signed with using the secret key corresponding to the provided private key and the specified signing algorithm.\n @param alg The signing algorithm by which the signature was generated.\n @param publicKey The public key against which to check the signature.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n @param message The hash of the message that was signed, should be zero-length if precomputed hash was given\n @param signature The signature to check.\n @return verified Whether the signature is valid for the given parameters.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify"
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "8685:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "alg",
												"nameLocation": "8712:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SigningAlg_$38",
													"typeString": "enum Sapphire.SigningAlg"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "SigningAlg",
														"nameLocations": [
															"8701:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 38,
														"src": "8701:10:0"
													},
													"referencedDeclaration": 38,
													"src": "8701:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SigningAlg_$38",
														"typeString": "enum Sapphire.SigningAlg"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "publicKey",
												"nameLocation": "8738:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8725:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "contextOrHash",
												"nameLocation": "8770:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8757:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "8806:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8793:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "8836:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8823:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8823:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8691:160:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "verified",
												"nameLocation": "8880:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:15:0"
									},
									"scope": 375,
									"src": "8676:455:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 376,
							"src": "167:8966:0",
							"usedErrors": []
						}
					],
					"src": "39:9095:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "Context",
							"nameLocation": "76:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "152:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 382,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "169:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "173:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "169:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 381,
												"id": 384,
												"nodeType": "Return",
												"src": "162:17:1"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "99:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "143:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:1"
									},
									"scope": 396,
									"src": "90:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "259:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 391,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "276:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "280:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "276:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 390,
												"id": 393,
												"nodeType": "Return",
												"src": "269:15:1"
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "201:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "243:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "243:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:16:1"
									},
									"scope": 396,
									"src": "192:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 397,
							"src": "58:235:1",
							"usedErrors": []
						}
					],
					"src": "33:261:1"
				},
				"id": 1
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							396
						],
						"ERC20": [
							1053
						],
						"IERC20": [
							1122
						],
						"IERC20Metadata": [
							1143
						],
						"Sapphire": [
							375
						]
					},
					"id": 1054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 1123,
							"src": "58:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 1144,
							"src": "81:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 397,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol",
							"file": "@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 376,
							"src": "136:66:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 403,
										"name": "Context",
										"nameLocations": [
											"223:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "223:7:2"
									},
									"id": 404,
									"nodeType": "InheritanceSpecifier",
									"src": "223:7:2"
								},
								{
									"baseName": {
										"id": 405,
										"name": "IERC20",
										"nameLocations": [
											"232:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "232:6:2"
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "232:6:2"
								},
								{
									"baseName": {
										"id": 407,
										"name": "IERC20Metadata",
										"nameLocations": [
											"240:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "240:14:2"
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "240:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1053,
							"linearizedBaseContracts": [
								1053,
								1143,
								1122,
								396
							],
							"name": "ERC20",
							"nameLocation": "214:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 412,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "297:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "261:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 411,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 409,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "261:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 410,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 418,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "369:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "313:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 413,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "313:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 416,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 414,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "332:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 415,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "351:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "403:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "387:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "387:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "437:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "422:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 421,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "422:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 424,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "463:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "448:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 423,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "448:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "641:99:2",
										"statements": [
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "651:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 434,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "659:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "651:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "651:13:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "674:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "684:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "674:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "674:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "707:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "711:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "707:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "719:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "701:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "701:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "701:32:2"
											}
										]
									},
									"id": 448,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "572:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "558:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "587:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "626:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "618:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:92:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:2"
									},
									"scope": 1053,
									"src": "537:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1132
									],
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "832:29:2",
										"statements": [
											{
												"expression": {
													"id": 454,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 422,
													"src": "849:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 453,
												"id": 455,
												"nodeType": "Return",
												"src": "842:12:2"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "772:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "799:8:2"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:2"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "817:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:15:2"
									},
									"scope": 1053,
									"src": "763:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1137
									],
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "955:31:2",
										"statements": [
											{
												"expression": {
													"id": 463,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 424,
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 462,
												"id": 464,
												"nodeType": "Return",
												"src": "965:14:2"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "893:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 459,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "922:8:2"
									},
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:2:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "940:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "940:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:15:2"
									},
									"scope": 1053,
									"src": "884:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1078:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1095:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 471,
												"id": 473,
												"nodeType": "Return",
												"src": "1088:9:2"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1022:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1053:8:2"
									},
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1071:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 469,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1071:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:7:2"
									},
									"scope": 1053,
									"src": "1013:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "1205:36:2",
										"statements": [
											{
												"expression": {
													"id": 481,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 420,
													"src": "1222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "1215:19:2"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1144:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1178:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:9:2"
									},
									"scope": 1053,
									"src": "1135:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1083
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "1368:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 492,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1385:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 494,
													"indexExpression": {
														"id": 493,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1395:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1385:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 495,
												"nodeType": "Return",
												"src": "1378:25:2"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1294:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 488,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1341:8:2"
									},
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "1304:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:17:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "1359:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:9:2"
									},
									"scope": 1053,
									"src": "1285:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1092
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1525:362:2",
										"statements": [
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1543:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "1535:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 507,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1535:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"expression": {
														"id": 509,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1551:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1555:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1551:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1535:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "1579:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 514,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1585:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1589:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1585:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1579:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f74207472616e7366657220746f6b656e20746f20796f75722073656c66",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1597:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9",
																"typeString": "literal_string \"You cannot transfer token to your self\""
															},
															"value": "You cannot transfer token to your self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7af355cff7dca3bed6269b6f02b3a40d25adc327950892bdb1cee08606ba0cd9",
																"typeString": "literal_string \"You cannot transfer token to your self\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1571:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1571:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1656:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 522,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "1666:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 524,
																"indexExpression": {
																	"id": 523,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "1676:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1666:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1656:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e73",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1684:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
																"typeString": "literal_string \"You do not have sufficient tokens\""
															},
															"value": "You do not have sufficient tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
																"typeString": "literal_string \"You do not have sufficient tokens\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1648:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "1648:72:2"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 529,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1730:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 531,
														"indexExpression": {
															"id": 530,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1740:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1730:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 532,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1750:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1730:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "1730:26:2"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 535,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1766:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 537,
														"indexExpression": {
															"id": 536,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 538,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1783:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1766:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1766:23:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1809:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1816:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1820:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1799:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "1799:28:2"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1837:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 548,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1853:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1876:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 506,
												"id": 552,
												"nodeType": "Return",
												"src": "1869:11:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1449:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1501:8:2"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1466:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1458:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1478:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1470:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:28:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1519:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1519:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:6:2"
									},
									"scope": 1053,
									"src": "1440:447:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1101
									],
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "2064:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 564,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "2081:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "2093:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2081:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 568,
													"indexExpression": {
														"id": 567,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "2100:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2081:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 569,
												"nodeType": "Return",
												"src": "2074:34:2"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1975:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 560,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2037:8:2"
									},
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1993:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1985:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2008:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2000:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:32:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2055:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:9:2"
									},
									"scope": 1053,
									"src": "1966:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2255:268:2",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2273:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "2265:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2265:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"expression": {
														"id": 583,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2281:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2285:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2281:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2265:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 587,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "2309:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"id": 588,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "2319:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2309:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 590,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "2329:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2309:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f7420686176652073756666696369656e7420746f6b656e73",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2337:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
																"typeString": "literal_string \"You do not have sufficient tokens\""
															},
															"value": "You do not have sufficient tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f559b70b8587c30ef47dbd4e191507832b9bdef2d55136e9901143c07cf99d39",
																"typeString": "literal_string \"You do not have sufficient tokens\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2301:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "2301:72:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "2391:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 597,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2402:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2406:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2402:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2391:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f7420617070726f766520796f757273656c66",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2414:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6",
																"typeString": "literal_string \"You cannot approve yourself\""
															},
															"value": "You cannot approve yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_affb82702ccc9a568595f3dec8a0fd953a2998f6b30981613a8788b1167d3cb6",
																"typeString": "literal_string \"You cannot approve yourself\""
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2383:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2383:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "2383:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "2472:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "2479:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "2488:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2463:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "2463:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2512:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 610,
												"nodeType": "Return",
												"src": "2505:11:2"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2175:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 577,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2231:8:2"
									},
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2191:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2183:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2200:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:33:2"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2249:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2249:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:6:2"
									},
									"scope": 1053,
									"src": "2166:357:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2698:219:2",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2716:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "2708:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2708:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"expression": {
														"id": 626,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2726:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2730:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2726:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2708:28:2"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 629,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2746:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 631,
														"indexExpression": {
															"id": 630,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2746:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 632,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "2765:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2746:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "2746:25:2"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 635,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2781:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 637,
														"indexExpression": {
															"id": 636,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2791:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2781:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 638,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "2798:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2781:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "2781:23:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2830:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "2836:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "2845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "2814:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2814:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2872:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2878:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "2882:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2862:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2862:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2862:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2906:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 623,
												"id": 654,
												"nodeType": "Return",
												"src": "2899:11:2"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2574:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2674:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2604:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2626:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2618:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2638:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:72:2"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2692:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2692:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:6:2"
									},
									"scope": 1053,
									"src": "2565:352:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "3076:227:2",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3094:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "3086:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 665,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3086:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"expression": {
														"id": 667,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3102:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3106:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3102:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3086:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 671,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "3130:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 673,
																"indexExpression": {
																	"id": 672,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "3140:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3130:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 674,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "3150:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3130:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3122:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3122:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "3122:39:2"
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 678,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3171:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 680,
														"indexExpression": {
															"id": 679,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3171:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 681,
														"name": "addedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3191:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3171:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3171:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "3220:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3227:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 688,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "3246:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 689,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "3253:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 687,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "3236:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3236:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 691,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "3264:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3236:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3211:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3211:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "3211:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3292:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 664,
												"id": 696,
												"nodeType": "Return",
												"src": "3285:11:2"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "2991:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3017:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3009:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3034:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3026:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:37:2"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3070:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3070:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:6:2"
									},
									"scope": 1053,
									"src": "2982:321:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "3467:371:2",
										"statements": [
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3485:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "3477:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3477:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3493:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3497:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3493:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3477:26:2"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 712,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3513:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 714,
														"indexExpression": {
															"id": 713,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3523:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3513:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 715,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3533:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3513:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "3513:35:2"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3566:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "3558:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3595:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 720,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "3585:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3558:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "3628:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 727,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "3648:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3628:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3665:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3620:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3620:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "3620:85:2"
											},
											{
												"id": 740,
												"nodeType": "UncheckedBlock",
												"src": "3715:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 733,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "3748:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 734,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "3755:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 735,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "3764:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 736,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "3783:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3764:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 732,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3739:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3739:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "3739:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 706,
												"id": 742,
												"nodeType": "Return",
												"src": "3820:11:2"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "3377:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3403:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3395:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "3420:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3412:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:42:2"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3461:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3461:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:6:2"
									},
									"scope": 1053,
									"src": "3368:470:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "3997:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "4015:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4031:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4023:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4023:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4023:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4015:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4035:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4007:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "4007:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "4093:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4107:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4099:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4099:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4099:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4093:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4111:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4085:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4085:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "4085:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4187:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4191:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "4160:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4160:38:2"
											},
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "4217:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4209:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4209:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"baseExpression": {
														"id": 781,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4231:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 783,
													"indexExpression": {
														"id": 782,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "4241:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4209:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "4264:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 787,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "4279:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4264:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4287:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4256:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "4256:72:2"
											},
											{
												"id": 800,
												"nodeType": "UncheckedBlock",
												"src": "4338:73:2",
												"statements": [
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 792,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "4362:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 794,
																"indexExpression": {
																	"id": 793,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "4372:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4362:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 795,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4380:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 796,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "4394:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4380:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4362:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "4362:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 801,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4420:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 803,
														"indexExpression": {
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4430:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4420:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 804,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "4437:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4420:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "4420:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 808,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4468:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4474:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4478:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "4459:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4459:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "4454:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4516:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4522:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4526:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4496:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4496:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "4496:37:2"
											}
										]
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3898:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3917:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3947:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3939:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3959:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:72:2"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3997:0:2"
									},
									"scope": 1053,
									"src": "3889:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "4670:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4688:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4707:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4699:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4699:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4688:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4711:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4680:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4680:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "4680:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4777:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4777:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4777:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4789:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4798:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 837,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "4756:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4756:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4756:49:2"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 846,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 847,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4832:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4816:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "4816:22:2"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 850,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4848:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4848:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 853,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4870:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4848:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "4848:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4908:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4900:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4900:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4912:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4921:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 856,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "4891:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "EmitStatement",
												"src": "4886:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4967:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4959:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4959:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4959:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4971:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4980:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4939:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "4939:48:2"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "4614:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4628:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4645:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4637:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4619:33:2"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4670:0:2"
									},
									"scope": 1053,
									"src": "4605:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5124:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "5142:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5161:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5153:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5153:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5153:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5142:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5165:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5134:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5134:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "5134:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "5233:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5250:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5242:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5242:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5242:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "5254:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5212:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5212:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "5212:49:2"
											},
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "5280:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "5272:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5272:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"baseExpression": {
														"id": 903,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "5297:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 905,
													"indexExpression": {
														"id": 904,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5307:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5297:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5272:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "5333:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 909,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "5351:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5333:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5359:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "5325:71:2"
											},
											{
												"id": 922,
												"nodeType": "UncheckedBlock",
												"src": "5406:79:2",
												"statements": [
													{
														"expression": {
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 914,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "5430:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 916,
																"indexExpression": {
																	"id": 915,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "5440:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5430:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "5451:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 918,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "5468:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5451:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5430:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 921,
														"nodeType": "ExpressionStatement",
														"src": "5430:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "5494:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5510:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5494:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "5494:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "5541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5558:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5550:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5550:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5550:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "5562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "5532:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5532:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "5527:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 937,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "5600:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5617:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5609:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 938,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5609:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5609:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "5621:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "5580:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5580:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "5580:48:2"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "5068:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5082:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5074:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5091:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:33:2"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5124:0:2"
									},
									"scope": 1053,
									"src": "5059:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "5810:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5828:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5837:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5837:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5837:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5828:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5849:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "5820:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "5906:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5925:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5917:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5917:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5917:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5906:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "5898:68:2"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 975,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5977:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 978,
															"indexExpression": {
																"id": 976,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5989:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5977:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 979,
														"indexExpression": {
															"id": 977,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5996:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5977:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "6007:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5977:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "5977:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 984,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "6037:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "6044:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "6053:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "6028:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6028:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "EmitStatement",
												"src": "6023:37:2"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "5706:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5732:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5724:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5755:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5747:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5780:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5772:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:78:2"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5810:0:2"
									},
									"scope": 1053,
									"src": "5697:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6254:321:2",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6272:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "6264:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6264:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "6301:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "6308:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "6291:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6291:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6264:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "6330:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6355:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1008,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6355:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1007,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6350:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6350:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6364:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6350:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6330:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6326:243:2",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "6369:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1014,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "6391:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1015,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "6411:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6391:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6419:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1013,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6383:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6383:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "6383:68:2"
														},
														{
															"id": 1028,
															"nodeType": "UncheckedBlock",
															"src": "6465:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1021,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "6502:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1022,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "6509:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1023,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "6518:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1024,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "6537:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6518:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1020,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "6493:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1027,
																	"nodeType": "ExpressionStatement",
																	"src": "6493:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "6143:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6176:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "6168:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "6191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6224:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "6216:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6158:78:2"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6254:0:2"
									},
									"scope": 1053,
									"src": "6134:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "6730:2:2",
										"statements": []
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "6620:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6658:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "6650:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6680:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "6672:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6700:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "6692:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6640:72:2"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6730:0:2"
									},
									"scope": 1053,
									"src": "6611:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "6885:2:2",
										"statements": []
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "6776:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "6805:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "6827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6855:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "6847:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6795:72:2"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6885:0:2"
									},
									"scope": 1053,
									"src": "6767:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1054,
							"src": "205:6684:2",
							"usedErrors": []
						}
					],
					"src": "33:6857:2"
				},
				"id": 2
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "IERC20",
							"nameLocation": "68:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1063,
									"name": "Transfer",
									"nameLocation": "87:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "96:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "134:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "118:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "146:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "138:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "95:57:3"
									},
									"src": "81:72:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1071,
									"name": "Approval",
									"nameLocation": "164:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "189:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "173:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "212:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "196:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "221:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:63:3"
									},
									"src": "158:78:3"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "251:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:3"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "288:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:3"
									},
									"scope": 1122,
									"src": "242:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "312:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "330:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "322:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:17:3"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "362:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:9:3"
									},
									"scope": 1122,
									"src": "303:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "386:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "415:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "407:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:28:3"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "441:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:6:3"
									},
									"scope": 1122,
									"src": "377:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "462:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "487:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:32:3"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "527:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:9:3"
									},
									"scope": 1122,
									"src": "453:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "551:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "567:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "559:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "584:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "576:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:33:3"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "610:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:6:3"
									},
									"scope": 1122,
									"src": "542:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "631:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "683:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "675:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "703:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "695:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:72:3"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "734:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:6:3"
									},
									"scope": 1122,
									"src": "622:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1123,
							"src": "58:684:3",
							"usedErrors": []
						}
					],
					"src": "33:710:3"
				},
				"id": 3
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1122
						],
						"IERC20Metadata": [
							1143
						]
					},
					"id": 1144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1144,
							"sourceUnit": 1123,
							"src": "58:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1126,
										"name": "IERC20",
										"nameLocations": [
											"111:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "111:6:4"
									},
									"id": 1127,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1143,
							"linearizedBaseContracts": [
								1143,
								1122
							],
							"name": "IERC20Metadata",
							"nameLocation": "93:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "133:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "163:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "163:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "162:15:4"
									},
									"scope": 1143,
									"src": "124:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "193:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "199:2:4"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:15:4"
									},
									"scope": 1143,
									"src": "184:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "255:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:4"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "289:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1139,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "289:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:7:4"
									},
									"scope": 1143,
									"src": "246:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1144,
							"src": "83:215:4",
							"usedErrors": []
						}
					],
					"src": "33:266:4"
				},
				"id": 4
			}
		}
	}
}